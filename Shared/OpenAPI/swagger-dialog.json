{
  "x-generator": "NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Melde API - Dialog/v1",
    "description": "<p>API for dialog handling</p>\r\n<p>Usage examples can be found in <a href=\"https://github.com/NorskHelsenett/Melde.no-eksempler\" target=\"_blank\">our example repository</a></p>\r\n",
    "contact": {
      "name": "Norsk helsenett",
      "url": "https://www.nhn.no",
      "email": "kundesenter@nhn.no"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:44342"
    }
  ],
  "paths": {
    "/api/v1/dialog": {
      "post": {
        "tags": [
          "Dialog"
        ],
        "summary": "Create a new dialog for the specified report, report area and authenticated process handler.",
        "operationId": "Dialog_StartDialog",
        "requestBody": {
          "x-name": "payload",
          "description": "Information specifying report reference and report area to associate the dialog with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogInfo"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Dialog created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialogCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dialog already exists, request error or validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed. Check for valid scopes in access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/ekstern/dialog": {
      "post": {
        "tags": [
          "Dialog"
        ],
        "summary": "Create a new dialog for the specified report, report area and authenticated process handler.",
        "operationId": "Dialog_StartDialog2",
        "requestBody": {
          "x-name": "payload",
          "description": "Information specifying report reference and report area to associate the dialog with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogInfo"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "201": {
            "description": "Dialog created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialogCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Dialog already exists, request error or validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed. Check for valid scopes in access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/dialog/message": {
      "post": {
        "tags": [
          "Dialog"
        ],
        "summary": "Send a dialog message",
        "operationId": "Dialog_SendMessage",
        "requestBody": {
          "x-name": "payload",
          "description": "Information needed to send a message",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogMessageInfo"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Dialog message sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialogMessageCreatedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dialog not found",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed. Check for valid scopes in access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/ekstern/dialog/message": {
      "post": {
        "tags": [
          "Dialog"
        ],
        "summary": "Send a dialog message",
        "operationId": "Dialog_SendMessage2",
        "requestBody": {
          "x-name": "payload",
          "description": "Information needed to send a message",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogMessageInfo"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Dialog message sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialogMessageCreatedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dialog not found",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed. Check for valid scopes in access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/dialog/message-pp": {
      "post": {
        "tags": [
          "Dialog"
        ],
        "summary": "Send a dialog message. Used by PP",
        "operationId": "Dialog_SendMessageFromPP",
        "requestBody": {
          "x-name": "payload",
          "description": "Information needed to send a message",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogMessageInfoPP"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Dialog message sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialogMessageCreatedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dialog not found",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed. Check for valid scopes in access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/ekstern/dialog/message-pp": {
      "post": {
        "tags": [
          "Dialog"
        ],
        "summary": "Send a dialog message. Used by PP",
        "operationId": "Dialog_SendMessageFromPP2",
        "requestBody": {
          "x-name": "payload",
          "description": "Information needed to send a message",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDialogMessageInfoPP"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Dialog message sent",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DialogMessageCreatedResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dialog not found",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed. Check for valid scopes in access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/dialog/{reportRef}": {
      "get": {
        "tags": [
          "Dialog"
        ],
        "summary": "Get dialog reference for specified report and authenticated user.",
        "operationId": "Dialog_GetDialogInfo",
        "parameters": [
          {
            "name": "reportRef",
            "in": "path",
            "required": true,
            "description": "Report reference. Format [Uxxxx]' or [Vxxxx]",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Dialog found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dialog not found",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed. Check for valid scopes in access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/ekstern/dialog/{reportRef}": {
      "get": {
        "tags": [
          "Dialog"
        ],
        "summary": "Get dialog reference for specified report and authenticated user.",
        "operationId": "Dialog_GetDialogInfo2",
        "parameters": [
          {
            "name": "reportRef",
            "in": "path",
            "required": true,
            "description": "Report reference. Format [Uxxxx]' or [Vxxxx]",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Dialog found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogInfoResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dialog not found",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed. Check for valid scopes in access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/dialog/{dialogRef}/message": {
      "get": {
        "tags": [
          "Dialog"
        ],
        "summary": "Get all unread messages in specified dialog",
        "operationId": "Dialog_GetUnreadMessages",
        "parameters": [
          {
            "name": "dialogRef",
            "in": "path",
            "required": true,
            "description": "Dialog reference. Format [Dxxxx]",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Unread messages returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnreadMessagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dialog not found",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed. Check for valid scopes in access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/ekstern/dialog/{dialogRef}/message": {
      "get": {
        "tags": [
          "Dialog"
        ],
        "summary": "Get all unread messages in specified dialog",
        "operationId": "Dialog_GetUnreadMessages2",
        "parameters": [
          {
            "name": "dialogRef",
            "in": "path",
            "required": true,
            "description": "Dialog reference. Format [Dxxxx]",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Unread messages returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUnreadMessagesResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dialog not found",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authentication failed",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "Authorization failed. Check for valid scopes in access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Other error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/dialog/search/{reportRef}": {
      "get": {
        "tags": [
          "Dialog"
        ],
        "summary": "Search for dialog in the specified report. If no dialog was found for the logged in case worker, the response contains information to make the user able to start a new dialog.",
        "operationId": "Dialog_SearchCaseWorkerDialog",
        "parameters": [
          {
            "name": "reportRef",
            "in": "path",
            "required": true,
            "description": "Report reference to the wanted report",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Dialog info response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCaseWorkerDialogRespons"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/ekstern/dialog/search/{reportRef}": {
      "get": {
        "tags": [
          "Dialog"
        ],
        "summary": "Search for dialog in the specified report. If no dialog was found for the logged in case worker, the response contains information to make the user able to start a new dialog.",
        "operationId": "Dialog_SearchCaseWorkerDialog2",
        "parameters": [
          {
            "name": "reportRef",
            "in": "path",
            "required": true,
            "description": "Report reference to the wanted report",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Dialog info response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCaseWorkerDialogRespons"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/dialog/full/{dialogRef}": {
      "get": {
        "tags": [
          "Dialog"
        ],
        "summary": "Returns the complete dialog for the specified dialog reference number",
        "operationId": "Dialog_Get",
        "parameters": [
          {
            "name": "dialogRef",
            "in": "path",
            "required": true,
            "description": "Dialog reference number. 'Dxxx...'",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Dialog",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogResponse"
                }
              }
            }
          },
          "404": {
            "description": "No dialog found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/ekstern/dialog/full/{dialogRef}": {
      "get": {
        "tags": [
          "Dialog"
        ],
        "summary": "Returns the complete dialog for the specified dialog reference number",
        "operationId": "Dialog_Get2",
        "parameters": [
          {
            "name": "dialogRef",
            "in": "path",
            "required": true,
            "description": "Dialog reference number. 'Dxxx...'",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Dialog",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogResponse"
                }
              }
            }
          },
          "404": {
            "description": "No dialog found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDialogResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "DialogCreatedResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRespons"
          },
          {
            "type": "object",
            "description": "Kvittering for opprettet dialog",
            "additionalProperties": false,
            "properties": {
              "DialogRef": {
                "type": "string",
                "description": "Referansenummer til generert dialog i En Vei Inn sin database",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseRespons": {
        "type": "object",
        "description": "Generell baseklasse for respons fra APIet. Inneholder statuskode og feilmelding",
        "additionalProperties": false,
        "properties": {
          "Status": {
            "description": "Generelle statuser:\n200 OK,\n400 BadRequest om feil i meldingen, for eksempel påkrevde felt mangler\n404 NotFound om noe som skal hentes eller oppdateres ikke eksisterer\n500 internal server error - andre feil.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ]
          },
          "Feil": {
            "description": "Informasjon om eventuell feil",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FeilmeldingViewModel"
              }
            ]
          }
        }
      },
      "HttpStatusCode": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Continue",
          "SwitchingProtocols",
          "Processing",
          "EarlyHints",
          "OK",
          "Created",
          "Accepted",
          "NonAuthoritativeInformation",
          "NoContent",
          "ResetContent",
          "PartialContent",
          "MultiStatus",
          "AlreadyReported",
          "IMUsed",
          "MultipleChoices",
          "Ambiguous",
          "MovedPermanently",
          "Moved",
          "Found",
          "Redirect",
          "SeeOther",
          "RedirectMethod",
          "NotModified",
          "UseProxy",
          "Unused",
          "TemporaryRedirect",
          "RedirectKeepVerb",
          "PermanentRedirect",
          "BadRequest",
          "Unauthorized",
          "PaymentRequired",
          "Forbidden",
          "NotFound",
          "MethodNotAllowed",
          "NotAcceptable",
          "ProxyAuthenticationRequired",
          "RequestTimeout",
          "Conflict",
          "Gone",
          "LengthRequired",
          "PreconditionFailed",
          "RequestEntityTooLarge",
          "RequestUriTooLong",
          "UnsupportedMediaType",
          "RequestedRangeNotSatisfiable",
          "ExpectationFailed",
          "MisdirectedRequest",
          "UnprocessableEntity",
          "Locked",
          "FailedDependency",
          "UpgradeRequired",
          "PreconditionRequired",
          "TooManyRequests",
          "RequestHeaderFieldsTooLarge",
          "UnavailableForLegalReasons",
          "InternalServerError",
          "NotImplemented",
          "BadGateway",
          "ServiceUnavailable",
          "GatewayTimeout",
          "HttpVersionNotSupported",
          "VariantAlsoNegotiates",
          "InsufficientStorage",
          "LoopDetected",
          "NotExtended",
          "NetworkAuthenticationRequired"
        ],
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          300,
          301,
          301,
          302,
          302,
          303,
          303,
          304,
          305,
          306,
          307,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ]
      },
      "FeilmeldingViewModel": {
        "type": "object",
        "description": "Informasjon om feilmeldinger fra APIet",
        "additionalProperties": false,
        "properties": {
          "Message": {
            "type": "string",
            "description": "Feilmeldingsteksten",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Når feilen oppsto",
            "format": "date-time"
          },
          "ExceptionType": {
            "type": "string",
            "description": "Hva slags type feil det gjelder",
            "nullable": true
          },
          "CorrelationId": {
            "type": "string",
            "description": "KorrelasjonsId fra kallet som feilen oppsto i",
            "nullable": true
          },
          "InnerException": {
            "type": "string",
            "description": "Fylles bare ut i testmiljø - indre feilmelding",
            "nullable": true
          },
          "Brukernavn": {
            "type": "string",
            "description": "Navn på bruker som kalte funksjonen feilen oppsto i",
            "nullable": true
          }
        }
      },
      "CreateDialogInfo": {
        "type": "object",
        "description": "Create dialog DTO",
        "additionalProperties": false,
        "required": [
          "ReportRef",
          "ReportArea"
        ],
        "properties": {
          "ReportRef": {
            "type": "string",
            "description": "Reference to the report that this dialog is associated with, on the format [Uxxxx] or [Vxxxx]",
            "minLength": 1,
            "pattern": "^(U|V)[a-zA-Z0-9]{2,15}$"
          },
          "ReportArea": {
            "type": "integer",
            "description": "Report area id. Assigned by NHN when the API is activated.",
            "format": "int32"
          },
          "Email": {
            "type": "string",
            "description": "Dialog creator's email address.\nRequired for web frontend only.",
            "format": "email",
            "maxLength": 150,
            "nullable": true
          }
        }
      },
      "DialogMessageCreatedResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRespons"
          },
          {
            "type": "object",
            "description": "Kvittering for opprettet dialogmelding",
            "additionalProperties": false,
            "properties": {
              "MessageRef": {
                "type": "string",
                "description": "Referansenummer til generert dialogmelding",
                "nullable": true
              }
            }
          }
        ]
      },
      "CreateDialogMessageInfo": {
        "type": "object",
        "description": "Create dialog message DTO",
        "additionalProperties": false,
        "required": [
          "DialogRef",
          "MessageText"
        ],
        "properties": {
          "DialogRef": {
            "type": "string",
            "description": "Dialog reference for this message, on the format [Dxxxx]",
            "minLength": 1,
            "pattern": "^D[a-zA-Z0-9]{2,15}$"
          },
          "MessageText": {
            "type": "string",
            "description": "Message text. HTML formatting may be used if the receiving system supports it. Melde.no does.",
            "maxLength": 1048576,
            "minLength": 1
          },
          "SenderName": {
            "type": "string",
            "description": "Sender name. For instance case manager name.\nIf not specified, the name of the client is used.",
            "maxLength": 64,
            "nullable": true
          },
          "NotifyRecipient": {
            "type": "boolean",
            "description": "Flag to control receiver notification.\nIf false, the receiver will not receive a notification (often email) about the new message.\nIf true, the receiver is notified.\nDefault is true.",
            "nullable": true
          },
          "Attachments": {
            "type": "array",
            "description": "Message attachments. Max 5.",
            "maxItems": 5,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        }
      },
      "Attachment": {
        "type": "object",
        "description": "Message attachment",
        "additionalProperties": false,
        "properties": {
          "Name": {
            "type": "string",
            "description": "Attachment name",
            "nullable": true
          },
          "AttachmentType": {
            "type": "string",
            "description": "Type of attachment (mime type)",
            "nullable": true
          },
          "Content": {
            "type": "string",
            "description": "Attachment content (base64 encoded)",
            "nullable": true
          }
        }
      },
      "CreateDialogMessageInfoPP": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateDialogMessageInfo"
          },
          {
            "type": "object",
            "description": "Create dialog message DTO, from Helsenorge",
            "additionalProperties": false,
            "properties": {
              "HelsenorgeIds": {
                "description": "Id-s related to Helsenorge",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/HelsenorgeIds"
                  }
                ]
              },
              "SenderNin": {
                "type": "string",
                "description": "Sender NIN",
                "nullable": true
              }
            }
          }
        ]
      },
      "HelsenorgeIds": {
        "type": "object",
        "description": "Helsenorge Id-s",
        "additionalProperties": false,
        "properties": {
          "MessageId": {
            "type": "string",
            "description": "Message id",
            "format": "guid"
          },
          "DialogId": {
            "type": "string",
            "description": "Helsenorge dialog id",
            "format": "guid",
            "nullable": true
          },
          "PreviousMessageId": {
            "type": "string",
            "description": "Previous message id",
            "format": "guid",
            "nullable": true
          }
        }
      },
      "GetDialogInfoResponse": {
        "type": "object",
        "description": "Dialog info response",
        "additionalProperties": false,
        "properties": {
          "DialogRef": {
            "type": "string",
            "description": "Dialog reference",
            "nullable": true
          }
        }
      },
      "GetUnreadMessagesResponse": {
        "type": "object",
        "description": "Respons som inneholder en liste med uleste meldinger",
        "additionalProperties": false,
        "properties": {
          "Messages": {
            "type": "array",
            "description": "Liste med meldinger",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Message"
            }
          }
        }
      },
      "Message": {
        "type": "object",
        "description": "Message class",
        "additionalProperties": false,
        "required": [
          "MessageRef",
          "ReceivedTime",
          "ReportRef"
        ],
        "properties": {
          "MessageRef": {
            "type": "string",
            "description": "Referanse til melding på formatet [Mxxxx]",
            "minLength": 1
          },
          "MessageText": {
            "type": "string",
            "description": "Meldingstekst",
            "nullable": true
          },
          "Attachments": {
            "type": "array",
            "description": "Liste med vedlegg",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          },
          "ReceivedTime": {
            "type": "string",
            "description": "Tidspunkt når meldingen ble mottatt av Melde. ISO datoformat i UTC.\nEksempel. '2022-07-13T05:20:01.908Z'",
            "format": "date-time",
            "minLength": 1
          },
          "ReportRef": {
            "type": "string",
            "description": "Referanse til den uønskede hendelsen denne dialogmeldingen tilhører, på formatet [Uxxxx] eller [Vxxxx]",
            "minLength": 1
          }
        }
      },
      "SearchCaseWorkerDialogRespons": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRespons"
          },
          {
            "type": "object",
            "description": "Case worker dialog search response",
            "additionalProperties": false,
            "properties": {
              "ReporterEmail": {
                "type": "string",
                "description": "Reporter's email address",
                "nullable": true
              },
              "ReportAreas": {
                "type": "array",
                "description": "Report areas the report has been sent to, except report areas which already have an existing dialog",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/IdNavn"
                }
              },
              "ExistingDialog": {
                "description": "Dialog info, if a dialog was found. Otherwise null",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DialogInfo"
                  }
                ]
              }
            }
          }
        ]
      },
      "IdNavn": {
        "type": "object",
        "description": "Generic long id + string name",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Generert ID i En Vei Inn sin database",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name of the item",
            "nullable": true
          }
        }
      },
      "DialogInfo": {
        "type": "object",
        "description": "Dialog info",
        "additionalProperties": false,
        "properties": {
          "DialogRef": {
            "type": "string",
            "description": "Dialog reference number, if a dialog was found",
            "nullable": true
          },
          "ReportArea": {
            "description": "Report area, if a dialog was found",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IdNavn"
              }
            ]
          }
        }
      },
      "GetDialogResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRespons"
          },
          {
            "type": "object",
            "description": "Kvittering for henting av dialog",
            "additionalProperties": false,
            "properties": {
              "Dialog": {
                "description": "Dialog med meldinger, om det finnes en hvor pålogget bruker er saksbehandler eller melder.",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Dialog"
                  }
                ]
              }
            }
          }
        ]
      },
      "Dialog": {
        "type": "object",
        "description": "Informasjon om en dialog.",
        "additionalProperties": false,
        "properties": {
          "ReportRef": {
            "type": "string",
            "description": "Report reference",
            "nullable": true
          },
          "DialogRef": {
            "type": "string",
            "description": "Dialog reference",
            "nullable": true
          },
          "EmailAddresses": {
            "description": "Email addresses to the dialog participants",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/EmailAddresses"
              }
            ]
          },
          "ReportArea": {
            "description": "DIalog report area",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IdNavn"
              }
            ]
          },
          "ReportedByHealthcarePersonell": {
            "type": "boolean",
            "description": "True if the report is dispatched by healthcare personnel"
          },
          "SupportsAttachments": {
            "type": "boolean",
            "description": "True if this report area supports attachments"
          },
          "DialogMessages": {
            "type": "array",
            "description": "Dialog messages",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DialogMessage"
            }
          }
        }
      },
      "EmailAddresses": {
        "type": "object",
        "description": "Dialog email addresses",
        "additionalProperties": false,
        "properties": {
          "ReporterEmail": {
            "type": "string",
            "description": "Reporter email address",
            "nullable": true
          },
          "CaseWorkerEmail": {
            "type": "string",
            "description": "Case worker email address",
            "nullable": true
          }
        }
      },
      "DialogMessage": {
        "type": "object",
        "description": "Dialog message",
        "additionalProperties": false,
        "properties": {
          "MessageRef": {
            "type": "string",
            "description": "Dialog reference",
            "nullable": true
          },
          "MessageText": {
            "type": "string",
            "description": "Message content",
            "nullable": true
          },
          "SenderName": {
            "type": "string",
            "description": "Sender's name",
            "nullable": true
          },
          "ReceipientName": {
            "type": "string",
            "description": "Receipient name",
            "nullable": true
          },
          "IsRecipient": {
            "type": "boolean",
            "description": "True if logged in user is the recipient of this message"
          },
          "IsRead": {
            "type": "boolean",
            "description": "Read flag"
          },
          "SentTime": {
            "type": "string",
            "description": "Send timestamp",
            "format": "date-time"
          },
          "ReadTime": {
            "type": "string",
            "description": "Read timestamp",
            "format": "date-time",
            "nullable": true
          },
          "Attachments": {
            "type": "array",
            "description": "Attachments",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Attachment"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "description": "Put **_ONLY_** your JWT Bearer token on textbox below!",
        "name": "JWT Authentication",
        "in": "header",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}