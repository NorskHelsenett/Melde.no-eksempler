{
  "x-generator": "NSwag v13.18.2.0 (NJsonSchema v10.8.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Melde API - Report/v1",
    "description": "<p>API for reporting adverse incidents</p>\r\n<p>Usage examples can be found in <a href=\"https://github.com/NorskHelsenett/Melde.no-eksempler\" target=\"_blank\">our example repository</a></p>\r\n",
    "contact": {
      "name": "Norsk helsenett",
      "url": "https://www.nhn.no",
      "email": "kundesenter@nhn.no"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:44342"
    }
  ],
  "paths": {
    "/api/v1/report/drug-side-effects": {
      "post": {
        "tags": [
          "AdverseIncident"
        ],
        "summary": "Report an adverse indicent related to drug or vaccine side effect.",
        "description": "Requires authentication via HelseId and a valid HPR authorization",
        "operationId": "AdverseIncident_LegemiddelBivirkning",
        "requestBody": {
          "x-name": "lbr",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DrugSideEffectsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A report has been updated in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "201": {
            "description": "A new report has been created in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, most probably a validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/report/serious-incident": {
      "post": {
        "tags": [
          "AdverseIncident"
        ],
        "summary": "Report a serious incicent",
        "description": "Requires authentication via HelseId and a valid HPR authorization",
        "operationId": "AdverseIncident_AlvorligHendelse",
        "requestBody": {
          "x-name": "ahr",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SeriousIncidentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A report has been updated in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "201": {
            "description": "A new report has been created in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, most probably a validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/report/cosmetics": {
      "post": {
        "tags": [
          "AdverseIncident"
        ],
        "summary": "Report an adverse indicent cosmetics.",
        "description": "Requires authentication via HelseId and a valid HPR authorization",
        "operationId": "AdverseIncident_Kosmetikk",
        "requestBody": {
          "x-name": "kos",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CosmeticsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A report has been updated in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "201": {
            "description": "A new report has been created in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, most probably a validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/report/dietary-supplements": {
      "post": {
        "tags": [
          "AdverseIncident"
        ],
        "summary": "Report an adverse indicent related to dietary supplements.",
        "description": "Requires authentication via HelseId and a valid HPR authorization",
        "operationId": "AdverseIncident_Kosttilskudd",
        "requestBody": {
          "x-name": "kos",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DietarySupplementsRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A report has been updated in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "201": {
            "description": "A new report has been created in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, most probably a validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/report/biovigilance": {
      "post": {
        "tags": [
          "AdverseIncident"
        ],
        "summary": "Report an adverse indicent related to biovigilance.",
        "description": "Requires authentication via HelseId and a valid HPR authorization",
        "operationId": "AdverseIncident_Biovigilans",
        "requestBody": {
          "x-name": "req",
          "description": "Request object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BiovigilanceRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A report has been updated in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "201": {
            "description": "A new report has been created in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, most probably a validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/report/medical-equipment": {
      "post": {
        "tags": [
          "AdverseIncident"
        ],
        "summary": "Report an adverse indicent related to medical equipment.",
        "description": "Requires authentication via HelseId and a valid HPR authorization",
        "operationId": "AdverseIncident_MedisinskUtstyr",
        "requestBody": {
          "x-name": "req",
          "description": "Request object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MedicalEquipmentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A report has been updated in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "201": {
            "description": "A new report has been created in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, most probably a validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/report/validate-adverse-incident": {
      "post": {
        "tags": [
          "AdverseIncident"
        ],
        "summary": "Validate an adverse indicent. This endpoint supports multiple report areas in the same report (combined reporting).",
        "description": "Requires authentication via HelseId and a valid HPR authorization",
        "operationId": "AdverseIncident_ValidateAdverseIncident",
        "requestBody": {
          "x-name": "req",
          "description": "Request object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdverseIncidentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "Validation OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, most probably a validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/report/adverse-incident": {
      "post": {
        "tags": [
          "AdverseIncident"
        ],
        "summary": "Report an adverse indicent. This endpoint supports multiple report areas in the same report (combined reporting).",
        "description": "Requires authentication via HelseId and a valid HPR authorization",
        "operationId": "AdverseIncident_UonsketHendelse",
        "requestBody": {
          "x-name": "req",
          "description": "Request object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdverseIncidentRequest"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "A report has been updated in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "201": {
            "description": "A new report has been created in Melde",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, most probably a validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      },
      "get": {
        "tags": [
          "AdverseIncident"
        ],
        "summary": "Returns a list of adverse indicents reported by the logged in user.",
        "description": "Requires authentication via HelseId",
        "operationId": "AdverseIncident_MyReports",
        "responses": {
          "200": {
            "description": "List of adverse incidents",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdverseIncidentListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseRespons"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/api/v1/nokup/lookup": {
      "get": {
        "tags": [
          "Nokup"
        ],
        "summary": "Lookup one or more Nokup codes",
        "operationId": "Nokup_NokupLookup",
        "parameters": [
          {
            "name": "codes",
            "in": "query",
            "description": "Semicolon separated list of codes",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NokupLookupResult"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, most probably a validation error",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "401": {
            "description": "Authorization failed, check for valid scopes in the access token",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "500": {
            "description": "Internal error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/KvitteringsMelding"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "KvitteringsMelding": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRespons"
          },
          {
            "type": "object",
            "description": "Svarmelding uavhengig av om kall til controlleren gikk bra eller ikke. Dersom feil oppstår legges det i Feil-feltet.",
            "additionalProperties": false,
            "properties": {
              "Id": {
                "type": "integer",
                "description": "Generert ID i En Vei Inn sin database",
                "format": "int64"
              },
              "EksterntSaksSystem": {
                "type": "string",
                "description": "Eksternt system, for eksempel navn på avvikssystem",
                "nullable": true
              },
              "EksternSaksid": {
                "type": "string",
                "description": "Id i eksternt system, for eksempel AVVIK123",
                "nullable": true
              },
              "MeldingsId": {
                "type": "string",
                "description": "MeldingsId på meldingen. Oppgitt ved innsending.",
                "format": "guid"
              },
              "Mottakere": {
                "type": "array",
                "description": "Liste med navn på meldeordninger som mottar meldingen",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "Referansenummer": {
                "type": "string",
                "description": "Menneskelig leselig referansenummer, for eksempel XYZ12",
                "nullable": true
              },
              "MeldersEpost": {
                "type": "string",
                "description": "Dersom e-postadresse ble oppgitt, e-postadresse varsling blir sendt til.",
                "nullable": true
              }
            }
          }
        ]
      },
      "BaseRespons": {
        "type": "object",
        "description": "Generell baseklasse for respons fra APIet. Inneholder statuskode og feilmelding",
        "additionalProperties": false,
        "properties": {
          "Status": {
            "description": "Generelle statuser:\n200 OK,\n400 BadRequest om feil i meldingen, for eksempel påkrevde felt mangler\n404 NotFound om noe som skal hentes eller oppdateres ikke eksisterer\n500 internal server error - andre feil.",
            "oneOf": [
              {
                "$ref": "#/components/schemas/HttpStatusCode"
              }
            ]
          },
          "Feil": {
            "description": "Informasjon om eventuell feil",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/FeilmeldingViewModel"
              }
            ]
          }
        }
      },
      "HttpStatusCode": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Continue",
          "SwitchingProtocols",
          "Processing",
          "EarlyHints",
          "OK",
          "Created",
          "Accepted",
          "NonAuthoritativeInformation",
          "NoContent",
          "ResetContent",
          "PartialContent",
          "MultiStatus",
          "AlreadyReported",
          "IMUsed",
          "MultipleChoices",
          "Ambiguous",
          "MovedPermanently",
          "Moved",
          "Found",
          "Redirect",
          "SeeOther",
          "RedirectMethod",
          "NotModified",
          "UseProxy",
          "Unused",
          "TemporaryRedirect",
          "RedirectKeepVerb",
          "PermanentRedirect",
          "BadRequest",
          "Unauthorized",
          "PaymentRequired",
          "Forbidden",
          "NotFound",
          "MethodNotAllowed",
          "NotAcceptable",
          "ProxyAuthenticationRequired",
          "RequestTimeout",
          "Conflict",
          "Gone",
          "LengthRequired",
          "PreconditionFailed",
          "RequestEntityTooLarge",
          "RequestUriTooLong",
          "UnsupportedMediaType",
          "RequestedRangeNotSatisfiable",
          "ExpectationFailed",
          "MisdirectedRequest",
          "UnprocessableEntity",
          "Locked",
          "FailedDependency",
          "UpgradeRequired",
          "PreconditionRequired",
          "TooManyRequests",
          "RequestHeaderFieldsTooLarge",
          "UnavailableForLegalReasons",
          "InternalServerError",
          "NotImplemented",
          "BadGateway",
          "ServiceUnavailable",
          "GatewayTimeout",
          "HttpVersionNotSupported",
          "VariantAlsoNegotiates",
          "InsufficientStorage",
          "LoopDetected",
          "NotExtended",
          "NetworkAuthenticationRequired"
        ],
        "enum": [
          100,
          101,
          102,
          103,
          200,
          201,
          202,
          203,
          204,
          205,
          206,
          207,
          208,
          226,
          300,
          300,
          301,
          301,
          302,
          302,
          303,
          303,
          304,
          305,
          306,
          307,
          307,
          308,
          400,
          401,
          402,
          403,
          404,
          405,
          406,
          407,
          408,
          409,
          410,
          411,
          412,
          413,
          414,
          415,
          416,
          417,
          421,
          422,
          423,
          424,
          426,
          428,
          429,
          431,
          451,
          500,
          501,
          502,
          503,
          504,
          505,
          506,
          507,
          508,
          510,
          511
        ]
      },
      "FeilmeldingViewModel": {
        "type": "object",
        "description": "Informasjon om feilmeldinger fra APIet",
        "additionalProperties": false,
        "properties": {
          "Message": {
            "type": "string",
            "description": "Feilmeldingsteksten",
            "nullable": true
          },
          "Timestamp": {
            "type": "string",
            "description": "Når feilen oppsto",
            "format": "date-time"
          },
          "ExceptionType": {
            "type": "string",
            "description": "Hva slags type feil det gjelder",
            "nullable": true
          },
          "CorrelationId": {
            "type": "string",
            "description": "KorrelasjonsId fra kallet som feilen oppsto i",
            "nullable": true
          },
          "InnerException": {
            "type": "string",
            "description": "Fylles bare ut i testmiljø - indre feilmelding",
            "nullable": true
          },
          "Brukernavn": {
            "type": "string",
            "description": "Navn på bruker som kalte funksjonen feilen oppsto i",
            "nullable": true
          }
        }
      },
      "DrugSideEffectsRequest": {
        "type": "object",
        "description": "Drug side effects DTO",
        "additionalProperties": false,
        "required": [
          "Header",
          "Report"
        ],
        "properties": {
          "Header": {
            "description": "Header",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DrugSideEffectsHeaderPart"
              }
            ]
          },
          "Report": {
            "description": "Report",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DrugSideEffectsReportPart"
              }
            ]
          }
        }
      },
      "DrugSideEffectsHeaderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HeaderPartBase"
          },
          {
            "type": "object",
            "description": "Header part",
            "additionalProperties": false,
            "required": [
              "Reporter",
              "Patient",
              "Incident"
            ],
            "properties": {
              "Reporter": {
                "description": "Reporter part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DrugSideEffectsReporterPart"
                  }
                ]
              },
              "Patient": {
                "description": "Patient part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DrugSideEffectsPatientPart"
                  }
                ]
              },
              "Incident": {
                "description": "Incident",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DrugSideEffectsIncidentPart"
                  }
                ]
              }
            }
          }
        ]
      },
      "DrugSideEffectsReporterPart": {
        "type": "object",
        "description": "Reporter part",
        "additionalProperties": false,
        "required": [
          "Organization",
          "Email",
          "Phone"
        ],
        "properties": {
          "Nin": {
            "type": "string",
            "description": "National id number",
            "pattern": "^\\d{11}$",
            "nullable": true,
            "example": "13065906141"
          },
          "HprId": {
            "type": "integer",
            "description": "HPR id",
            "format": "int32",
            "maximum": 1000000000.0,
            "minimum": 0.0,
            "nullable": true
          },
          "Organization": {
            "description": "Organization",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationPart"
              }
            ]
          },
          "Email": {
            "type": "string",
            "description": "E-mail address",
            "format": "email",
            "minLength": 1,
            "example": "TestData@melde.no"
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "maxLength": 100,
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Phone number",
            "format": "phone",
            "minLength": 1,
            "example": "99999999"
          },
          "Qualification": {
            "description": "Reporter's qualification",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Qualification"
              }
            ]
          },
          "IsOnBehalfOf": {
            "description": "True if reporter is reporting on behalf of someone else",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNo"
              }
            ]
          }
        }
      },
      "OrganizationPart": {
        "type": "object",
        "description": "Organization part",
        "additionalProperties": false,
        "properties": {
          "OrgNumber": {
            "type": "string",
            "description": "Organization number.\nRequired if Name is empty",
            "pattern": "^\\d{9}$",
            "nullable": true,
            "example": 883974832
          },
          "Name": {
            "type": "string",
            "description": "Organization name.\nRequired if OrgNumber is empty",
            "maxLength": 250,
            "nullable": true,
            "example": "ST. OLAVS HOSPITAL HF"
          },
          "Address": {
            "type": "string",
            "description": "Organization address",
            "maxLength": 250,
            "nullable": true,
            "example": "SykehusGaten 5"
          },
          "ZipCode": {
            "type": "string",
            "description": "Organization zip code",
            "maxLength": 10,
            "nullable": true,
            "example": "0424"
          },
          "City": {
            "type": "string",
            "description": "Organization city",
            "maxLength": 250,
            "nullable": true,
            "example": "Oslo"
          },
          "Municipality": {
            "type": "string",
            "description": "Organization municipality",
            "maxLength": 64,
            "nullable": true,
            "example": "Oslo"
          },
          "Institution": {
            "type": "string",
            "description": "Institution",
            "maxLength": 250,
            "nullable": true
          },
          "Department": {
            "type": "string",
            "description": "Department",
            "maxLength": 250,
            "nullable": true
          },
          "LocalReferenceNumber": {
            "type": "string",
            "description": "Local reference number if applicable",
            "maxLength": 100,
            "nullable": true,
            "example": "ATL-123321"
          }
        }
      },
      "Qualification": {
        "type": "string",
        "description": "A person's qualification",
        "x-enumNames": [
          "Physician",
          "Pharmacist",
          "Other"
        ],
        "enum": [
          "Lege",
          "Farmasøyt",
          "Annet"
        ]
      },
      "YesNo": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Yes",
          "No"
        ],
        "enum": [
          "Ja",
          "Nei"
        ]
      },
      "DrugSideEffectsPatientPart": {
        "type": "object",
        "description": "Patient part",
        "additionalProperties": false,
        "properties": {
          "Nin": {
            "type": "string",
            "description": "National id number",
            "pattern": "^\\d{11}$",
            "nullable": true,
            "example": 15037104229
          },
          "Initials": {
            "type": "string",
            "description": "Patient's initials",
            "nullable": true
          },
          "Gender": {
            "description": "Gender.\nRequired if Nin is not set",
            "nullable": true,
            "example": "Mann",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          },
          "DateOfBirth": {
            "type": "string",
            "description": "Date of birth.\nRequired if Nin is not set",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "nullable": true,
            "example": "1980-05-25"
          },
          "Height": {
            "type": "integer",
            "description": "Height, in cm",
            "format": "int32",
            "maximum": 300.0,
            "minimum": 1.0,
            "nullable": true
          },
          "Weight": {
            "type": "integer",
            "description": "Weight, in kg",
            "format": "int32",
            "maximum": 250.0,
            "minimum": 30.0,
            "nullable": true
          }
        }
      },
      "Gender": {
        "type": "string",
        "description": "Pasientens kjønn (OID=3101)\nSe kodeverk 3101 på volven: https://volven.no/produkt.asp?id=382591&catID=3&subID=8.",
        "x-enumNames": [
          "NotKnown",
          "Male",
          "Female",
          "NotSpecified"
        ],
        "enum": [
          "IkkeKjent",
          "Mann",
          "Kvinne",
          "IkkeSpesifisert"
        ]
      },
      "DrugSideEffectsIncidentPart": {
        "type": "object",
        "description": "Incident part",
        "additionalProperties": false,
        "required": [
          "IncidentDescription"
        ],
        "properties": {
          "IncidentDescription": {
            "type": "string",
            "description": "Incident description",
            "minLength": 1,
            "example": "Det er mange opplysninger, men de har vi ikke."
          }
        }
      },
      "HeaderPartBase": {
        "type": "object",
        "description": "Base class for all header parts",
        "x-abstract": true,
        "additionalProperties": false,
        "required": [
          "ExternalCaseId"
        ],
        "properties": {
          "ExternalCaseId": {
            "type": "string",
            "description": "Unique report identifier in the external system.",
            "maxLength": 100,
            "minLength": 1,
            "example": "MYSYS-REF8345"
          },
          "Language": {
            "description": "Language. Default Norwegian",
            "nullable": true,
            "example": "English",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Language"
              }
            ]
          },
          "ExternalMessageId": {
            "type": "string",
            "description": "External message id",
            "format": "guid",
            "nullable": true,
            "example": "8c3d9d5d-bf98-4ca7-8406-8df657ae3a82"
          }
        }
      },
      "Language": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Unknown",
          "Default",
          "Norwegian",
          "Norsk",
          "English",
          "Engelsk"
        ],
        "enum": [
          "Unknown",
          "Norwegian",
          "Norwegian",
          "Norwegian",
          "English",
          "English"
        ]
      },
      "DrugSideEffectsReportPart": {
        "type": "object",
        "description": "Report part",
        "additionalProperties": false,
        "required": [
          "Drugs",
          "Symptoms"
        ],
        "properties": {
          "Drugs": {
            "type": "array",
            "description": "Drug parts",
            "items": {
              "$ref": "#/components/schemas/DrugSideEffectsDrugPart"
            }
          },
          "Symptoms": {
            "type": "array",
            "description": "Symptom parts",
            "items": {
              "$ref": "#/components/schemas/DrugSideEffectsSymptomsPart"
            }
          },
          "OtherInformation": {
            "description": "Other information part",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DrugSideEffectsOtherInformationPart"
              }
            ]
          },
          "Attachments": {
            "type": "array",
            "description": "Attachments",
            "maxItems": 5,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AttachmentPart"
            }
          }
        }
      },
      "DrugSideEffectsDrugPart": {
        "type": "object",
        "description": "Drug part",
        "additionalProperties": false,
        "required": [
          "Role",
          "Dosage"
        ],
        "properties": {
          "DrugId": {
            "type": "string",
            "description": "Drug id",
            "maxLength": 64,
            "nullable": true,
            "example": "ID_7BC40EE4-9823-44BD-8785-A2F9B119EF5C"
          },
          "IsVaccine": {
            "description": "Is vaccine.\nRequired if drug id is empty",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNo"
              }
            ]
          },
          "DrugName": {
            "type": "string",
            "description": "Drug name.\nRequired if drug id is empty",
            "nullable": true
          },
          "Role": {
            "description": "Drug role",
            "example": "Samtidig",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LegemiddelRolle"
              }
            ]
          },
          "Indication": {
            "type": "string",
            "description": "Indication.",
            "maxLength": 64,
            "nullable": true
          },
          "StillInUse": {
            "description": "StillInUse",
            "nullable": true,
            "example": "Ja",
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          },
          "DrugForm": {
            "type": "string",
            "description": "Drig form, i.e. tablet\nRef kodeverk 7448 at Volven: https://volven.no/produkt.asp?id=382962&catID=3&subID=8.",
            "maxLength": 128,
            "nullable": true
          },
          "UnsureDrugFormOrStrength": {
            "description": "Unsure about drug form or strength",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNo"
              }
            ]
          },
          "DrugSideEffectsAction": {
            "description": "What did the user do when side the effects started",
            "example": "DosenRedusert",
            "oneOf": [
              {
                "$ref": "#/components/schemas/LegemiddelBivirkningsHandling"
              }
            ]
          },
          "SideEffectsReoccured": {
            "description": "Did the side effects reoccure when treatment was stopped and then started again?\nSet this when DrugSideEffectsAction is set to 'SluttetÅTaLegemiddelet'",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          },
          "SalesChannel": {
            "description": "Where is the drug purchased?",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Kjøpssted"
              }
            ]
          },
          "SalesChannelDescription": {
            "type": "string",
            "description": "Additional info about the sales channel",
            "nullable": true
          },
          "Dosage": {
            "description": "Dosage part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DrugSideEffectsDosagePart"
              }
            ]
          }
        }
      },
      "LegemiddelRolle": {
        "type": "string",
        "description": "Legemiddelrolle",
        "x-enumNames": [
          "Suspected",
          "Parallel",
          "Interactive"
        ],
        "enum": [
          "Mistenkt",
          "Samtidig",
          "Interagerende"
        ]
      },
      "YesNoDontKnow": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Yes",
          "No",
          "DontKnow"
        ],
        "enum": [
          "Ja",
          "Nei",
          "VetIkke"
        ]
      },
      "LegemiddelBivirkningsHandling": {
        "type": "integer",
        "description": "Hva gjorde bruker når bivirkning oppstod",
        "x-enumNames": [
          "NotSet",
          "StoppedUsingDrug",
          "DoseReduced",
          "DoseIncreased",
          "NoChange",
          "DontKnow"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5
        ]
      },
      "Kjøpssted": {
        "type": "string",
        "description": "Mulige valg for hvor legemiddelet ble kjøpt",
        "x-enumNames": [
          "NotSet",
          "PharmacyWithoutPrescription",
          "PharmacyWithPrescription",
          "ShopKioskGasStation",
          "Internet",
          "DeliveredByDoctor",
          "Other"
        ],
        "enum": [
          "IkkeSatt",
          "ApotekUtenResept",
          "ApotekMedResept",
          "ButikkKioskBensinstasjon",
          "Internett",
          "UtlevertHosLege",
          "Annet"
        ]
      },
      "DrugSideEffectsDosagePart": {
        "type": "object",
        "description": "Dosage part",
        "additionalProperties": false,
        "properties": {
          "DosageDescription": {
            "type": "string",
            "description": "Dosage description",
            "maxLength": 64,
            "nullable": true,
            "example": "1000mg per dag"
          },
          "StartDate": {
            "type": "string",
            "description": "Dosage start date. At least year must be specified.",
            "nullable": true,
            "example": "1996-01-04"
          },
          "StartTimeOfDay": {
            "type": "string",
            "description": "Time of day when the patient started using the drug.",
            "nullable": true,
            "example": "14:13"
          },
          "EndDate": {
            "type": "string",
            "description": "Dosage end date. At least year must be specified.",
            "nullable": true,
            "example": "1996-01-04"
          },
          "BatchLotNumber": {
            "type": "string",
            "description": "Batch/lot number",
            "maxLength": 64,
            "nullable": true,
            "example": "Batchnummer #R1195"
          },
          "AdministrationRoute": {
            "description": "Administration route.\nWhere was the drug taken/injected.",
            "nullable": true,
            "example": "HøyreLår",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdministrationRoute"
              }
            ]
          },
          "AdministrationRouteOther": {
            "type": "string",
            "description": "Administration route other.\nWhere was the drug taken/injected.",
            "nullable": true,
            "example": "Other administration route"
          },
          "DoseNumber": {
            "description": "Dose number",
            "nullable": true,
            "example": "To",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DoseNumber"
              }
            ]
          }
        }
      },
      "AdministrationRoute": {
        "type": "string",
        "description": "Legemiddelrolle",
        "x-enumNames": [
          "RightArm",
          "LeftArm",
          "RightThigh",
          "LeftThigh",
          "Orally",
          "Other"
        ],
        "enum": [
          "HøyreArm",
          "VenstreArm",
          "HøyreLår",
          "VenstreLår",
          "Oralt",
          "Annet"
        ]
      },
      "DoseNumber": {
        "type": "string",
        "description": "Dose number",
        "x-enumNames": [
          "One",
          "Two",
          "Three",
          "Four",
          "NotInSeries"
        ],
        "enum": [
          "En",
          "To",
          "Tre",
          "Fire",
          "IkkeISerie"
        ]
      },
      "DrugSideEffectsSymptomsPart": {
        "type": "object",
        "description": "Symptom part",
        "additionalProperties": false,
        "required": [
          "Description"
        ],
        "properties": {
          "Description": {
            "type": "string",
            "description": "Symptom description",
            "minLength": 1,
            "example": "Blodtrykksfall"
          },
          "StartDate": {
            "type": "string",
            "description": "Symptom start date. Supports only year or year and month as well",
            "nullable": true,
            "example": "1996-01-04"
          },
          "EndDate": {
            "type": "string",
            "description": "Symptom end date. Supports only year or year and month as well",
            "nullable": true,
            "example": "1996-01-04"
          },
          "Ongoing": {
            "description": "Ongioing. Is the symptom still there?",
            "nullable": true,
            "example": "Nei",
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNo"
              }
            ]
          },
          "SideEffectsDelay": {
            "type": "string",
            "description": "How long it took from the first use of the drug to side effects occured",
            "nullable": true
          },
          "Outcome": {
            "description": "Outcome",
            "nullable": true,
            "example": "RestituertMenMedEttervirkninger",
            "oneOf": [
              {
                "$ref": "#/components/schemas/SideEffectOutcome"
              }
            ]
          }
        }
      },
      "SideEffectOutcome": {
        "type": "string",
        "description": "Side effect outcome\nRef kodeverk 7469 at volven: https://volven.no/produkt.asp?id=382526&catID=3&subID=8.",
        "x-enumNames": [
          "FullyRecovered",
          "Improvement",
          "NoImprovement",
          "RecoveredWithSymptoms",
          "Death",
          "Unknown"
        ],
        "enum": [
          "RestituertUtenEttervirkninger",
          "BedringMenIkkeFullstendigRestituert",
          "IngenBedring",
          "RestituertMenMedEttervirkninger",
          "Dod",
          "Ukjent"
        ]
      },
      "DrugSideEffectsOtherInformationPart": {
        "type": "object",
        "description": "Other information part",
        "additionalProperties": false,
        "properties": {
          "Severity": {
            "type": "array",
            "description": "Severity",
            "maxItems": 5,
            "nullable": true,
            "example": [
              "Livstruende",
              "AnomaliFodselsdefekt"
            ],
            "items": {
              "$ref": "#/components/schemas/SideEffectSeverity"
            }
          }
        }
      },
      "SideEffectSeverity": {
        "type": "string",
        "description": "Bivirkningens alvorlighet\nSe kodeverk 7468 på volven: https://volven.no/produkt.asp?id=382525&catID=3&subID=8.",
        "x-enumNames": [
          "Death",
          "LifeThreatening",
          "Hospitalization",
          "PersistentDisability",
          "AnomalyOrBirthDefect",
          "Other"
        ],
        "enum": [
          "ResulterteIDod",
          "Livstruende",
          "SykehusinnleggelseForlengetOpphold",
          "VedvarendeUforhetNedsattFunksjonsevne",
          "AnomaliFodselsdefekt",
          "Annet"
        ]
      },
      "AttachmentPart": {
        "type": "object",
        "description": "Attachment part",
        "additionalProperties": false,
        "required": [
          "Name",
          "Content"
        ],
        "properties": {
          "Name": {
            "type": "string",
            "description": "Attachment name (i.e. file name)",
            "maxLength": 300,
            "minLength": 1,
            "example": "bilde123.jpg"
          },
          "Content": {
            "type": "string",
            "description": "Attachment content.\nBase64 encoded. May be prefixed by for instance 'data:image/jpeg;base64,'",
            "minLength": 1,
            "example": "77+977+977+977+9ABBKRklGAAEBAAABAAEAAO+/ve+/vQDvv70ACQYHEhASFRASEA8QDxAQEA8PDxAPEA8QEA8VERYWFREVFRgdKCAYGiUbFRUhMSElKSsuLi4XHzM4My03KC0uKwEgICAOIA4XEBAXKx0dHS0tLS0tLS0rKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0rLS0tLTc3LS0tLS0rKysr77+977+9ABEIAO+/vQEVAwEiAAIRAQMRAe+/ve+/vQAbAAACAwEBAQAAAAAAAAAAAAACAwABBAUGB++/ve+/vQA5EAACAQIDBgQEBQMDBQAAAAAAAQIDEQQhMQUSQVFhcQYi77+977+9EzLvv73vv71CUmJy77+9FCPvv70k77+977+9M0NU77+977+977+977+9ABkBAQADAQEAAAAAAAAAAAAAAAIAAQMEBe+/ve+/vQAiEQEBAAICAgICAwAAAAAAAAAAAQIRAyEEMRJBInEyQlHvv73vv70ADAMBAAIRAxEAPwDvv71pBu+/ve+/ve+/ve+/vQ9R77+9YwLvv70LGi3vv73vv73vv71L77+9S2Xvv70G77+9ZO+/ve+/vSkLZe+/vUY177+9YDgG77+9Z1Hvv71NIO+/vSrvv73vv73vv73vv70l77+9Eu+/ve+/vSAsLe+/ve+/vdyrIBLvv73vv70J77+977+977+9X++/ve+/vQlTd++/ve+/vUpQ77+977+9FQdu77+9Ae+/vT5hIhEZGu+/vRXvv73GnHfvv7191a3vv71g77+9Ke+/ve+/vTww77+9XUPvv71uR++/ve+/ve+/ve+/ve+/vWob77+9TWU277+977+977+9Y++/ve+/ve+/vVFb77+977+9178eZwZebe+/vVHvv708XGTvv73vv70qJ++/vU7vv70P77+9f1cl77+977+9fU7vv73vv73vv73vv70r77+9R++/vV5j77+9yrbvv71R77+9XBjvv70AWu+/vUTvv73vv70B77+977+9aO+/vWTVru+/vS3vv73vv73vv70y77+977+9XO+/ve+/ve+/ve+/ve+/ve+/vRvvv71i77+9QNyM77+977+9Ju+/ve+/vUQpBO+/vQUFcWnvv73vv70o77+977+9Qe+/vUIy77+92pti77+9dO+/ve+/ve+/vXjvv73vv70a77+9O0dpOe+/ve+/vUTvv73vv73vv70DJU3vv73vv73RtO+/vXBnGzDvv71j77+977+9KUMw6KyL77+9HXvvv73vv73vv73vv73vv70Q0bnvv71mJnBFLe+/ve+/vTDvv71oNhQt77+9d++/vRgsFhHvv73vv73vv70/Qu+/vSTvv73vv70qQTg8Qkjvv71tHHbvv71cUu+/vXln77+9Nu+/vW9kcXbvv716d9yLe++/ve+/ve+/vTzvv703O++/ve+/vXfvv71477+977+9Xj9q1ZTvv73vv70M77+977+9Rhd777+9XyPvv73vv73vv71C77+9aQ7vv73vv73vv73vv71HNx8d77+9Tk7vv73vv71hRlLvv70vTkPvv70JRV7vv73vv70z77+90aUV77+9SH1cOmrvv71k77+977+9FSA877+977+977+9LhNSTe+/ve+/vWrvv700e++/vSvvv73vv73vv73vv70jIO+/vVNc77+977+977+9fQbvv73vv71W77+977+977+9b++/ve+/vVsc77+977+9SDjvv70o77+9NRPvv73vv71B77+977+9VUJ677+9WO+/ve+/vWRBQjco77+9Xe+/vUXvv71y77+9XWbvv73vv73vv713Ku+/vRMo77+977+977+9dO+/vcOc77+9BF3vv71HYO+/vXYhcXYm77+9dSjvv73vv73vv73vv73vv71J77+9xLzCiu+/ve+/vXTvv70U77+977+9acSq77+977+9V++/vQFS77+9Wlg677+977+977+9RiBQE3cbTu+/vdCmOu+/ve+/ve+/vTTvv73vv70+Au+/vRcdIBPvv73vv70B26Iz77+977+9FSjvv73vv73vv73vv71HQ++/vSfvv73vv71xMu+/ve+/vQl7BO+/vRI8bipN15Pvv71O3Y9pKO+/ve+/ve+/vQPvv73vv71x77+9ee+/ve+/ve+/ve+/vWdy77+9eC9WOe+/ve+/vQlqMwvvv73vv73vv73vv73vv73vv71J77+9J27vv70VGk7vv73fqe+/vWzvv73vv70AURjvv702S++/vQNMMXDvv73vv70Za1Dvv73vv71L77+977+9YO+/vXDvv705b28uTX8m77+92JXvv71oUt6o77+977+977+93qfvv73vv73vv71J77+9SXsj77+9Tu+/vVXvv70n77+977+9Le+/vdeH77+977+9M04p77+9VzczQu+/vS4x77+9Z++/ve+/vWpR77+9dUcoXe+/vT/vv73vv73vv70x77+9TS9TPO+/ve+/ve+/vUY5FVYjKSzvv73vv73vv73Vsirvv73vv73vv70X77+9QSAsEhFVbO+/vTZCdu+/vVUi77+9LiHvv73vv71gGwLvv73vv70Q77+9MiJQSO+/vUoAKe+/ve+/vSLvv70h77+9OU0u77+9IGwGwrTvv73vv70DC1Dvv71L77+9BVwq77+977+9JO+/ve+/ve+/vSZx77+9Ie+/vde477+977+9UGEFd++/vVQzVu+/vRzvv73vv73vv70TOnBLK++/vS1cRyVu77+9VO+/vX7vv712Ei7vv73vv71277+977+977+977+9dgLvv73vv71E77+9ajfvv73vv73vv71Y77+977+9MD5nOO+/vSvvv73vv71zdjk877+9LlJp77+9eO+/ve+/vRlx77+924FbMTHvv73vv70R77+9Ee+/ve+/ve+/vWXvv73vv70uSu+/veWbje+/vQBPQUVN77+9RWt677+9bRrvv71deO+/vTjvv73vv71277+9M3dpWe+/ve+/ve+/vQ45Wz0g77+9QVop77+9cu+/ve+/vQlk77+9Mzrvv70XQu+/ve+/vXtmPhDvv73vv73Hj9uT77+9Le+/vVnvv73vv71ebEPvv73vv70277+9ZtqfLwMY77+9VO+/ve+/vQXvv70S77+977+977+977+977+977+977+9Uu+/vT7vv70BFgNILe+/ve+/vXIp77+9RTLvv73vv70o77+9VO+/vUZCbU7vv70dSu+/ve+/ve+/ve+/vVnvv73vv71I77+9dADvv70U77+977+977+9L++/vUbvv73vv73vv71cyLIkLkbvv70477+975maZFgZTO+/ve+/vVbvv73vv71tWe+/ve+/vUrvv70A77+9e++/vQXvv71JagPvv73vv73vv71pUirdjO+/vRrvv73vv71c77+9YRLvv73vv71ECO+/vdmVOV8wGyrvv73vv71TKhDvv70Oy5rvv70Y77+9RS4e77+977+9Fypc77+9Tu+/ve+/vVVPRu+/ve+/vXPvv70re++/ve+/vT7vv71baWHvv70k77+9ACzvv71f77+9Oe+/ve+/ve+/vdGdXe+/vVXvv71zVjnvv73vv73vv73vv70b77+977+977+977+9cjRg77+9Ee+/ve+/vXd277+9J++/vXPvv71GKuusl++/ve+/vUbvv73vv71IZu+/ve+/ve+/vTTvv71B77+9dd2EE3nvv70a77+9OO+/vTbCoTjGplHvv73vv70Zcno0zrU677+9Su+/vXFp77+9TO+/vV04Mu+/vWvvv73vv73vv70477+977+9Uirvv73vv73vv73vv73vv71JRTDvv73vv70I77+9UHUE77+977+9Nu+/vRDLhmXvv70M77+9Yu+/ve+/ve+/vRTvv71RyJVMUkDvv70rU++/veu4hkDvv71o77+977+977+977+977+9VO+/ve+/vXTvv70jJTka1I7vv70a77+9Eu+/vU48ECvvv73vv73vv73vv71wKu+/vVV3eXoZZO+/vWwZMu+/vRTvv73vv71/A++/vQbvv73vv73vv73vv73vv73vv73ShO+/vQ/vv70JYe+/vTRo77+977+9fUHvv73vv73vv73vv71h77+9cjPvv70777+977+9Dte6NO+/ve+/vXvvv73vv73vv73vv73vv70z77+977+9ZO+/vSDvv702Ju+/vXUdWg5V77+977+977+9AO+/ve+/ve+/vVIqOu+/ve+/vXI277+977+9I01qeV3vv73vv715Se+/vRbvv71y5pGk77+977+9e3ljIO+/ve+/vR3vv73vv73vv73vv71I77+977+977+9UNqyc15r3avvv73vv73vv70x77+9E3F2a3I/77+9be+/ve+/vTHvv73vv71r77+9M++/vRtScu+/vd2S77+9Nxfvv70877+9Tw91c1zvv73vv73vv73vv73vv71J77+9G9G7X1BxFe+/ve+/ve+/vVvvv71a77+977+90K/vv73vv73vv71sOe+/vXVL77+977+977+977+9N++/ve+/ve+/vUk877+9HF3vv70AczJg77+9Dlnvv73vv73Lme+/vShBQXJJfSB477+977+977+9NzTvv71H77+977+977+9Uu+/vT5p77+93azvv70rQ2tV77+977+977+9SXLvv73vv73vv73vv73vv71L77+977+9du+/vWHvv73vv73vv70U77+977+977+9Du+/vXogHizvv73vv73vv73vv71O77+9Lxk+Kizvv73MljPvv71YXzfRqHjCk++/ve+/vW7vv73vv73vv73vv73vv70g77+9Ku+/vV0b77+977+9VDIVGu+/vWkz77+977+9R9mp77+9We+/vXtoH++/ve+/vXg/B++/vXcZ77+9U++/ve+/vTzvv73vv71I77+9IEbvv73vv70377+9P++/vV/vv71/77+977+9Vu+/ve+/vTUuA++/vVgFRe+/vW/vv73vv73Stu+/vWVJ77+9SyDvv71G77+977+9QBZAWQtT77+9GRrvv73vv73vv70M77+9Je+/ve+/vU/vv71OCe+/ve+/vQFCNyBa77+9BO+/ve+/vUbvv71LK2hlB++/ve+/vTzvv71MTh/vv73vv71+Ye+/ve+/ve+/vTzvv71g77+9fR/vv70l77+977+9QM2+YO+/vRcn77+977+9MTVlZe+/vQPvv73vv73vv71Geu+/vXZ577+9O1pI77+977+9I8e6NO+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/ve+/vUnvv70277+977+977+9GkLvv71G77+977+977+9Hirvv70vLe+/ve+/ve+/vQzvv71WUs2zLO+/vVJgWO+/vS5bHTnvv70z77+977+977+977+977+977+9W++/ve+/vV/vv73vv73vv71POu+/ve+/vcWLcnZX77+9fe+/vQDvv70177+945WPRRZr77+977+977+977+977+977+977+9FWs477+977+9chNPBVXvv71KbS1877+9FV4xUu+/ve+/veKTsu+/ve+/ve+/vW0g77+977+977+9VDbvv73vv73vv73vv73vv71/77+9E2pt77+9Km4OFe+/vUnvv73vv73vv73vv73vv70MRTXvv718ZTfvv73vv71/77+977+9H++/ve+/ve+/vRkpZO+/ve+/ve+/ve+/ve+/vVkG77+977+9Se+/ve+/ve+/ve+/vRYAUCHvv73vv73vv71I77+977+9MO+/vRcdQu+/ve+/vS4p77+9IFd2Se+/vWnvv71W77+977+9FUhG77+977+9UVLvv70fH++/vSvvv73vv70Q77+977+977+977+977+977+9HO+/ve+/ve+/ve+/vSBY77+977+977+9Ymvvv73vv73vv70na3A2Gjrvv709Be+/ve+/vW7vv73vv73vv70hbO+/vRdqTu+/vcWHKu+/ve+/ve+/ve+/vTfYjjHvv73vv71x77+9Vwbvv71cbDFBcUgfJe+/vRjvv73vv71k77+977+977+9UlwsZO+/vVtbRh9A77+9bkJp77+9bX7vv71GMu+/vdewbVjvv73vv73vv70qVu+/ve+/vVzvv70Tcu+/vQ9gWnIO77+9Vu+/vQjvv71raBzUue+/vWEV77+977+977+977+977+9WkfPvHcLVU/vv70X77+977+9AO+/ve+/ve+/vR7vv73Gr3rvv73vv70sV9Wz77+9SO+/ve+/ve+/vWTvv73vv70VIiACD++/ve+/ve+/vTcb77+977+977+977+977+977+977+9Xzx/dH7vv717fQ7vv73vv71Q77+977+977+91YtZ77+9ae+/vXjvv71W77+9OSDvv70Xy4/vv71/fE9LWu+/ve+/vW1G77+977+9L++/ve+/vTjvv73vv73vv71677+977+9z7Pvv73Rru+/vW7KhiJvTG0Zfuijn++/vWdR77+9TlLvv71JWe+/vXbvv73vv7001ac/xYDvv73vv70Aaznvv73vv71JRe+/vQDvv73vv70d77+9a++/vWo5Eijvv73vv73vv71k77+9AO+/vWzvv73vv73vv70U77+9VRhNAO+/vWUs77+9eR3vv70gbWdC77+977+977+9J2ku77+977+9CMi7Dxrvv71fYk0077+90aTvv70OP++/ve+/ve+/vcag77+9357vv73vv73vv73vv73vv73vv70377+977+977+9Ae+/vSnvv70FN++/vQTvv73vv70WypNRZll1EyEF77+9FgwgDu+/vV1N77+9JSNNKTtzM0si77+9Vu+/ve+/vQXvv73vv73vv70s77+9Ve+/ve+/ve+/ve+/ve+/vR/vv70e77+9KxPvv73vv70577+9IFvvv70f77+9LThcd++/vS9xcu+/ve+/ve+/vRrvv73vv73vv70377+9aULvv70pcl7vv73vv71Sa0Qc77+9Znxdbci5cEnvv73Sj++/vXjvv73vv73vv73vv73vv71KX0Pvv71VyZ0977+977+9dWpKd9W7fe+/vVTvv73Hne+/vUZES++/vVxg77+9SV3vv73vv70+77+9Pwbvv73vv73vv73vv71l77+9G++/ve+/vXXvv73vv73vv71Cy53Tt3MqRe+/ve+/ve+/ve+/ve+/vVjvv71y77+977+977+9Ju+/vVxh77+9XO+/vRxK77+977+98aWKp++/vXrvv71GW++/ve+/ve+/vVRy77+9du+/ve+/vUNlWu+/ve+/ve+/vdGfeO+/vW3vv73vv70XUw9877+977+9Ie+/ve+/vRXvv73vv703Xe+/ve+/ve+/ve+/vXxN77+9eO+/ve+/ve+/vVTvv70AajJjFUUX77+977+977+977+9FmZ277+977+9M++/ve+/ve+/ve+/vVbvv71KV++/vXI477+9edmrdDseG35m77+977+977+9Fu+/vQPvv71+Xe+/ve+/vdiUHwcfVmHvv70bCUIOce+/ve+/vVrvv73vv73vv71X77+977+977+9U24SVu+/vTRJXVfvv70bHiBIU++/vdGI77+977+977+9Vmbvv73vv70W77+9GU1RXDTvv70iEu+/ve+/vWDvv73vv70lF++/ve+/vRVrVXFv77+9y6o977+9Pk3vv71x77+977+977+9OO+/vUou77+977+977+977+977+9xr041Ivvv71n77+977+9R0Y177+977+9emMp77+977+977+9Ye+/vTJJ77+977+977+9cyEHTu+/vRLvv71qyYtManzvv70277+9CO+/ve+/vTZr77+9FO+/vRknEO+/vWFs77+9Wu+/vWHvv70q77+9PlYGVgZL77+9Kkvvv70gIu+/vRbvv73vv70vUAJK77+977+977+9QinTku+/ve+/vU/vv73vv70gHN2377+977+9Gm3vv73vv71s77+977+9K++/vWLvv71e77+9w7pya++/ve+/ve+/vWJm3adbfk3fizDus47vv70rG++/vUbLniJb77+977+977+9bk3vv70keu+/vQ7Fo0Hvv71J77+977+9FnllFO+/vV/vv71w77+9SlLvv70u77+9bXPvv73vv73vv71h1a7vv70sJO+/ve+/vVtW77+9NQbvv71J77+977+9M++/vcmr77+9e2xkFO+/ve+/vSTvv73vv73vv70Weu+/vWHvv73vv73vv71z77+977+92oxq77+9Xk/vv73vv70J77+9GO+/vSwM77+977+9Vi5RUu+/ve+/vUlTW++/vTjvv70jVh/vv70bNe+/vTFa77+9EO+/ve+/ve+/ve+/ve+/vUPvv71sCe+/vRbvv73Vrwfvv73vv73RpjUn77+9ce+/ve+/vUkkFO+/vXbvv71sNO+/ve+/ve+/vTzvv70p77+9Te+/vW9177+9a++/vRjEpu+/vScU77+9dhfvv73vv73vv73vv73vv71jH++/vWsc77+9Te+/vd6u77+9Ru+/vV4yWU3vv73vv71jbe+/vW5877+9Ze+/vTcn77+9dnlr77+977+9eGxsd3VFfO+/ve+/ve+/vTnvv715zaLvv73vv73vv73vv73vv73vv71R77+977+9FSUpNu+/vRM7Nu+/vdOH77+977+9PO+/ve+/ve+/vSELce+/ve+/vQvvv71O77+977+977+9DO+/vVnvv73vv71L77+93bkqdRUm77+9Ce+/vVnvv73vv70p77+9NjUb77+9Ke+/ve+/vUkXK++/ve+/vWVTWRdj77+9Ku+/ve+/vS7vv70g77+9cO+/vU1D77+977+977+905jvv71TQe+/vUVxWu+/vSd+S++/vV1b77+9Xu+/ve+/vVXvv73vv70d77+9LMuk77+9MGcw77+9PO+/vVrvv73vv73vv73vv70gSe+/vX7vv71vZ++/vVTvv71S1b7vv70/YXfvv70ybADvv70E77+977+9GW0XKu+/ve+/vX5Y77+9z6JNHzHvv71WBnTvv73vv73vv71lN3g+aMuTejxcbDzvv73Nq++/vR3vv73vv73vv73vv70reVN6IzTvv71F77+9S++/ve+/ve+/vVt177+9bStJK++/vV5Hau+/vUTvv70z77+9Ve+/ve+/ve+/vXN9IO+/ve+/ve+/ve+/vSDvv70477+977+977+977+9HiFFPeyVn++/ve+/vVXvv71zdu+/ve+/vQfvv73vv73vv73vv73vv70jLRfvv73vv73Plzl677+9R++/ve+/ve+/vSDvv73vv73vv71l77+977+977+977+977+9X8uEfu+/vT3vv73vv70A77+9C++/vXsn77+977+934EP77+9Su+/ve+/vRXvv73vv702VGbvv73vv71Q77+977+9FToR44Sa77+9MF0oLWjvv70h77+9TO+/ve+/vQli77+977+977+9EO+/ve+/vW0o77+9Vj/vv73vv70c77+977+977+977+977+977+9c++/ve+/vWfvv70zFWV177+91Kjvv70mJjIVZe+/ve+/vV7vv71c77+9Se+/vVYO77+9cO+/ve+/vXHvv71CcBXvv73vv73vv73vv73boe+/ve+/ve+/vT/vv70qc2leWV8hY++/ve+/vVXvv73vv73vv70U77+9bXLvv73vv70i77+977+9PmPvv73Jnu+/ve+/ve+/vX3vv73vv71cIO+/ve+/vXRH77+9Tu+/ve+/ve+/vXwT77+977+9Om5yVnNq77+934ULDu+/vd6qAQEQ0bDvv70WUQsT77+9Ve+/ve+/vVXvv73vv71a77+9VzFV77+9XO+/vSVCLmjvv73vv70s77+9LXHvv73vv70ZLO+/vUDvv70k77+9ZCFfS1Hvv73vv71OCVbvv70r77+9OC3vv73vv73vv70gaUfvv73vv70zVs+lBu+/veSbte+/vW9SEO+/vc+q77+9Me+/vWzvv71ZLhczV++/vUvvv70IVBzvv73vv73vv73vv73vv73vv73vv70hC++/ve+/vW0X77+9V++/vRzWvzM0Ye+/ve+/vcqtde+/vQhpSjQsNO+/vVfvv73vv71vD13vv71fLu+/vVco77+977+9HO+/vWYe77+9c3Vvf9KOZO+/ve+/vW7vv70hWO+/vRzvv73vv71CzKrvv71FWWTvv73vv70IOxnvv73vv713PCHvv71w77+9Q++/ve+/vQfZou+/vVTvv73vv73vv73vv73vv73vv70gVRfvv73vv705d++/vTFV77+9El/vv73vv73vv73vv73vv70Q77+977+9aNGC77+977+9Gu+/ve+/vWkr77+9cu+/ve+/ve+/vUUs77+977+9YhBz77+9OjLvv71CAu+/vUIWL++/vQ=="
          }
        }
      },
      "SeriousIncidentRequest": {
        "type": "object",
        "description": "Serious Incident DTO",
        "additionalProperties": false,
        "required": [
          "Header",
          "Report"
        ],
        "properties": {
          "Header": {
            "description": "Report header",
            "oneOf": [
              {
                "$ref": "#/components/schemas/SeriousIncidentHeaderPart"
              }
            ]
          },
          "Report": {
            "description": "Report",
            "oneOf": [
              {
                "$ref": "#/components/schemas/SeriousIncidentReportPart"
              }
            ]
          }
        }
      },
      "SeriousIncidentHeaderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HeaderPartBase"
          },
          {
            "type": "object",
            "description": "Header part",
            "additionalProperties": false,
            "required": [
              "Reporter",
              "Patient",
              "Incident"
            ],
            "properties": {
              "Reporter": {
                "description": "Reporter part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SeriousIncidentReporterPart"
                  }
                ]
              },
              "Patient": {
                "description": "Patient part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SeriousIncidentPatientPart"
                  }
                ]
              },
              "Incident": {
                "description": "Incident part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SeriousIncidentIncidentPart"
                  }
                ]
              }
            }
          }
        ]
      },
      "SeriousIncidentReporterPart": {
        "type": "object",
        "description": "Reporter part",
        "additionalProperties": false,
        "required": [
          "Organization",
          "Email",
          "Phone",
          "Role",
          "Position"
        ],
        "properties": {
          "Nin": {
            "type": "string",
            "description": "National id number",
            "pattern": "^\\d{11}$",
            "nullable": true,
            "example": "13065906141"
          },
          "HprId": {
            "type": "integer",
            "description": "HPR id",
            "format": "int32",
            "maximum": 1000000000.0,
            "minimum": 0.0,
            "nullable": true
          },
          "Organization": {
            "description": "Organization",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationPart"
              }
            ]
          },
          "IncidentOrganization": {
            "description": "Use if the incident occurred in an other organization",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationPart"
              }
            ]
          },
          "Email": {
            "type": "string",
            "description": "Email address",
            "format": "email",
            "minLength": 1,
            "example": "TestData@melde.no"
          },
          "Phone": {
            "type": "string",
            "description": "Phone number",
            "format": "phone",
            "minLength": 1,
            "example": "99999999"
          },
          "Role": {
            "description": "Reporter's role",
            "example": "Behandler",
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReporterRole"
              }
            ]
          },
          "Position": {
            "type": "string",
            "description": "Reporter's position",
            "maxLength": 32,
            "minLength": 1,
            "example": "Lege"
          }
        }
      },
      "ReporterRole": {
        "type": "string",
        "description": "Avaliable reporter roles",
        "x-enumNames": [
          "Manager",
          "Treator",
          "OtherEmployee",
          "Other",
          "PatientUser",
          "NextOfKin",
          "OtherRelative"
        ],
        "enum": [
          "Leder",
          "Behandler",
          "ØvrigAnsatt",
          "Annet",
          "PatientUser",
          "NextOfKin",
          "OtherRelative"
        ]
      },
      "SeriousIncidentPatientPart": {
        "type": "object",
        "description": "Patient part",
        "additionalProperties": false,
        "properties": {
          "Nin": {
            "type": "string",
            "description": "National id number\nRequired if patient's name, gender date of birth and nationality is not set.",
            "pattern": "^\\d{11}$",
            "nullable": true,
            "example": 15037104229
          },
          "Name": {
            "type": "string",
            "description": "Name.\nRequired if Nin is not set",
            "maxLength": 64,
            "nullable": true
          },
          "Gender": {
            "description": "Gender.\nRequired if Nin is not set",
            "nullable": true,
            "example": "Mann",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          },
          "DateOfBirth": {
            "type": "string",
            "description": "Date og birth.\nRequired if Nin is not set",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "nullable": true,
            "example": "1990-03-15"
          },
          "Nationality": {
            "type": "string",
            "description": "Nationality.\nRequired if Nin is not set",
            "maxLength": 64,
            "nullable": true
          }
        }
      },
      "SeriousIncidentIncidentPart": {
        "type": "object",
        "description": "Incident part",
        "additionalProperties": false,
        "required": [
          "IncidentDescription",
          "DateUnknown"
        ],
        "properties": {
          "IncidentDescription": {
            "type": "string",
            "description": "Textual description of what happened.",
            "minLength": 1
          },
          "IncidentDate": {
            "type": "string",
            "description": "Incident date",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "nullable": true,
            "example": "2021-04-14"
          },
          "DateUnknown": {
            "description": "Incident date not known",
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNo"
              }
            ]
          },
          "DateText": {
            "type": "string",
            "description": "Date period if no other date is given and DateUnknown is false",
            "maxLength": 100,
            "nullable": true
          }
        }
      },
      "SeriousIncidentReportPart": {
        "type": "object",
        "description": "Report part",
        "additionalProperties": false,
        "properties": {
          "ContactPersons": {
            "type": "array",
            "description": "Contact persons for this report",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SeriousIncidentContactPerson"
            }
          },
          "NextOfKin": {
            "type": "array",
            "description": "Next of kin",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SeriousIncidentNextOfKin"
            }
          },
          "AdditionalInfo": {
            "description": "Additional info. Relevant to Helsenorge reports only",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SeriousIncidentAdditionalInfo"
              }
            ]
          }
        }
      },
      "SeriousIncidentContactPerson": {
        "type": "object",
        "description": "Contact person",
        "additionalProperties": false,
        "required": [
          "Name",
          "Email",
          "Phone"
        ],
        "properties": {
          "Name": {
            "type": "string",
            "description": "Name",
            "maxLength": 100,
            "minLength": 1
          },
          "Email": {
            "type": "string",
            "description": "E-mail address",
            "format": "email",
            "maxLength": 100,
            "minLength": 1
          },
          "Phone": {
            "type": "string",
            "description": "Phone number",
            "format": "phone",
            "maxLength": 20,
            "minLength": 1,
            "example": 12345678
          },
          "Position": {
            "type": "string",
            "description": "Contact person's position",
            "maxLength": 100,
            "nullable": true
          }
        }
      },
      "SeriousIncidentNextOfKin": {
        "type": "object",
        "description": "Next of kin",
        "additionalProperties": false,
        "properties": {
          "Nin": {
            "type": "string",
            "description": "National id number",
            "pattern": "^\\d{11}$",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "maxLength": 150,
            "nullable": true
          },
          "Relation": {
            "type": "string",
            "description": "Relation to patient",
            "maxLength": 100,
            "nullable": true
          },
          "IsClosestNextOfKin": {
            "description": "Is closest next of kin",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          },
          "Address": {
            "type": "string",
            "description": "Address",
            "maxLength": 150,
            "nullable": true
          },
          "ZipCode": {
            "type": "string",
            "description": "Zip code",
            "maxLength": 4,
            "pattern": "^\\d{4}$",
            "nullable": true
          },
          "City": {
            "type": "string",
            "description": "City",
            "maxLength": 100,
            "nullable": true
          },
          "Email": {
            "type": "string",
            "description": "E-mail address",
            "format": "email",
            "maxLength": 100,
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Phone number",
            "format": "phone",
            "maxLength": 20,
            "nullable": true,
            "example": 12345678
          },
          "Notes": {
            "type": "string",
            "description": "Notes",
            "maxLength": 1000,
            "nullable": true
          }
        }
      },
      "SeriousIncidentAdditionalInfo": {
        "type": "object",
        "description": "Additional info. Relevent to Helsenorge reports only",
        "additionalProperties": false,
        "properties": {
          "SendToHtil": {
            "type": "boolean",
            "description": "If true, send report to UKOM. Default true"
          },
          "SendToUkom": {
            "type": "boolean",
            "description": "If true, send report to HTIL. Default true"
          }
        }
      },
      "CosmeticsRequest": {
        "type": "object",
        "description": "Cosmetics DTO",
        "additionalProperties": false,
        "required": [
          "Header",
          "Report"
        ],
        "properties": {
          "Header": {
            "description": "Header",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CosmeticsHeaderPart"
              }
            ]
          },
          "Report": {
            "description": "Report",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CosmeticsReportPart"
              }
            ]
          }
        }
      },
      "CosmeticsHeaderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HeaderPartBase"
          },
          {
            "type": "object",
            "description": "Header part",
            "additionalProperties": false,
            "required": [
              "Reporter",
              "Patient",
              "Incident"
            ],
            "properties": {
              "Reporter": {
                "description": "Reporter part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CosmeticsReporterPart"
                  }
                ]
              },
              "Patient": {
                "description": "Patient part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CosmeticsPatientPart"
                  }
                ]
              },
              "Incident": {
                "description": "Incident part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CosmeticsIncidentPart"
                  }
                ]
              }
            }
          }
        ]
      },
      "CosmeticsReporterPart": {
        "type": "object",
        "description": "Reporter part",
        "additionalProperties": false,
        "required": [
          "Organization",
          "Email",
          "Phone"
        ],
        "properties": {
          "Nin": {
            "type": "string",
            "description": "National id number",
            "pattern": "^\\d{11}$",
            "nullable": true,
            "example": "13065906141"
          },
          "HprId": {
            "type": "integer",
            "description": "HPR id",
            "format": "int32",
            "maximum": 1000000000.0,
            "minimum": 0.0,
            "nullable": true
          },
          "Organization": {
            "description": "Organization",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationPart"
              }
            ]
          },
          "Email": {
            "type": "string",
            "description": "E-mail address",
            "format": "email",
            "minLength": 1,
            "example": "TestData@melde.no"
          },
          "Phone": {
            "type": "string",
            "description": "Phone number",
            "format": "phone",
            "minLength": 1,
            "example": "99999999"
          }
        }
      },
      "CosmeticsPatientPart": {
        "type": "object",
        "description": "Patient part",
        "additionalProperties": false,
        "required": [
          "Gender",
          "YearOfBirth"
        ],
        "properties": {
          "Gender": {
            "description": "Gender",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          },
          "YearOfBirth": {
            "type": "integer",
            "description": "Year of birth",
            "format": "int32",
            "maximum": 2100.0,
            "minimum": 1900.0
          }
        }
      },
      "CosmeticsIncidentPart": {
        "type": "object",
        "description": "Incident part",
        "additionalProperties": false,
        "required": [
          "IncidentDescription"
        ],
        "properties": {
          "IncidentDescription": {
            "type": "string",
            "description": "Incident description",
            "minLength": 1
          }
        }
      },
      "CosmeticsReportPart": {
        "type": "object",
        "description": "Cosmetics part",
        "additionalProperties": false,
        "required": [
          "SideEffects"
        ],
        "properties": {
          "SideEffects": {
            "description": "Side effects part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CosmeticsSideEffectsPart"
              }
            ]
          },
          "RelevantInformation": {
            "description": "Relevant information part",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CosmeticsRelevantInformationPart"
              }
            ]
          },
          "Products": {
            "type": "array",
            "description": "Products part",
            "maxItems": 4,
            "minItems": 1,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CosmeticsProductPart"
            }
          }
        }
      },
      "CosmeticsSideEffectsPart": {
        "type": "object",
        "description": "Side effects part",
        "additionalProperties": false,
        "properties": {
          "AffectedSkinAreas": {
            "type": "array",
            "description": "Affected skin areas\nWhere on the body showed side effects?",
            "maxItems": 10,
            "minItems": 1,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "Reactions": {
            "type": "array",
            "description": "Reactions.\nWhich reactions happened?",
            "maxItems": 10,
            "minItems": 1,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "ReactionDelay": {
            "description": "Reaction delay.\nHow long after the use did the reactions show up?",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReactionDelay"
              }
            ]
          },
          "ReactionDelayDescription": {
            "type": "string",
            "description": "Reaction delay description",
            "maxLength": 250,
            "nullable": true
          },
          "SideEffectDuration": {
            "type": "string",
            "description": "Side effect duration",
            "maxLength": 100,
            "nullable": true
          }
        }
      },
      "ReactionDelay": {
        "type": "string",
        "description": "How long time after exposure did the reaction show",
        "x-enumNames": [
          "WithinHalfHour",
          "HalfHourToOneHour",
          "Within24Hours",
          "MoreThan24Hours",
          "Other",
          "Unknown"
        ],
        "enum": [
          "Innen30Min",
          "Innen30MinTil1Time",
          "Innen24Timer",
          "MerEnn1Døgn",
          "Annet",
          "VetIkke"
        ]
      },
      "CosmeticsRelevantInformationPart": {
        "type": "object",
        "description": "Relevant information part",
        "additionalProperties": false,
        "properties": {
          "SideEffectsOnPreviousUse": {
            "description": "Side effects on previous use of this product",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoPartialDontKnow"
              }
            ]
          },
          "PreviousUseDescription": {
            "type": "string",
            "description": "Previous use description",
            "maxLength": 300,
            "nullable": true
          },
          "ConditionOfSkinAreaBeforeUse": {
            "type": "array",
            "description": "Condition of affected skin area before use of the products",
            "maxItems": 10,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Tilstand"
            }
          },
          "ConditionOfSkinAreaBeforeUseDescription": {
            "type": "string",
            "description": "Condition of affected skin area before use of the products",
            "maxLength": 250,
            "nullable": true
          },
          "AllergiesOrSkinDiseases": {
            "type": "string",
            "description": "Any allergies or skin diseases",
            "maxLength": 150,
            "nullable": true
          }
        }
      },
      "YesNoPartialDontKnow": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "Yes",
          "No",
          "Partial",
          "DontKnow"
        ],
        "enum": [
          "Ja",
          "Nei",
          "Delvis",
          "VetIkke"
        ]
      },
      "Tilstand": {
        "type": "string",
        "description": "Tilstand til område før et produkt ble brukt",
        "x-enumNames": [
          "Normal",
          "Torr",
          "Irritert",
          "Annet"
        ],
        "enum": [
          "Normal",
          "Torr",
          "Irritert",
          "Annet"
        ]
      },
      "CosmeticsProductPart": {
        "type": "object",
        "description": "Product part",
        "additionalProperties": false,
        "required": [
          "ProductInformation"
        ],
        "properties": {
          "ProductInformation": {
            "description": "Product information part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/CosmeticsProductInformationPart"
              }
            ]
          },
          "ProductUsage": {
            "description": "Product usage part",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CosmeticsProductUsagePart"
              }
            ]
          }
        }
      },
      "CosmeticsProductInformationPart": {
        "type": "object",
        "description": "Product information part",
        "additionalProperties": false,
        "required": [
          "ProductName",
          "ProductType",
          "ReportedToVendorOrManufacturer"
        ],
        "properties": {
          "ProductName": {
            "type": "string",
            "description": "Product name",
            "maxLength": 150,
            "minLength": 1
          },
          "ProductType": {
            "description": "Product type",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Produkttype"
              }
            ]
          },
          "VendorOrManufacturer": {
            "type": "string",
            "description": "Vendor or manufacturer",
            "maxLength": 150,
            "nullable": true
          },
          "ReportedToVendorOrManufacturer": {
            "description": "Reported to vendor or producer?",
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          },
          "BestBeforeDateExpired": {
            "description": "Best before date expired",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          },
          "PurchaseLocation": {
            "description": "Where is the product purchased",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/PurchaseLocation"
              }
            ]
          },
          "SalesChannel": {
            "description": "Sales channel",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SalesChannel"
              }
            ]
          },
          "BatchLotNumber": {
            "type": "string",
            "description": "Product batch/lot number",
            "maxLength": 100,
            "nullable": true
          },
          "Attachments": {
            "type": "array",
            "description": "Attachments",
            "maxItems": 5,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AttachmentPart"
            }
          }
        }
      },
      "Produkttype": {
        "type": "string",
        "description": "Type produkt\nMan kan også oppgi tekster ikke definert i enumen, de vil da bli tolket som annet, fritekst.",
        "x-enumNames": [
          "Fuktighetspleie",
          "Hudrens",
          "Harbehandling",
          "Harpleie",
          "Sminke",
          "Sape",
          "Deodorant",
          "Parfyme",
          "Solprodukter",
          "Negleprodukter",
          "Munnhygiene",
          "Barberingsprodukter",
          "Harfjerningsprodukter",
          "Tatovering",
          "Annet"
        ],
        "enum": [
          "Fuktighetspleie",
          "Hudrens",
          "Harbehandling",
          "Harpleie",
          "Sminke",
          "Sape",
          "Deodorant",
          "Parfyme",
          "Solprodukter",
          "Negleprodukter",
          "Munnhygiene",
          "Barberingsprodukter",
          "Harfjerningsprodukter",
          "Tatovering",
          "Annet"
        ]
      },
      "PurchaseLocation": {
        "type": "string",
        "description": "Purchase location",
        "x-enumNames": [
          "NorwegianDealer",
          "ForeignDealer",
          "NorwegianWebShop",
          "ForeignWebShop",
          "Unknown"
        ],
        "enum": [
          "UtsalgsstedINorge",
          "UtsalgsstedIUtlandet",
          "NetthandelINorge",
          "NetthandelIUtlandet",
          "VetIkke"
        ]
      },
      "SalesChannel": {
        "type": "string",
        "description": "Sales channel",
        "x-enumNames": [
          "Pharmacy",
          "Perfumery",
          "Hairdresser",
          "SkinCareSalon",
          "HealthFoodStore",
          "GroceryStore",
          "TaxFreeShop",
          "Other"
        ],
        "enum": [
          "Apotek",
          "Parfymeri",
          "Frisørsalong",
          "Hudpleiesalong",
          "Helsekostbutikk",
          "Matvarebutikk",
          "Taxfree",
          "Annet"
        ]
      },
      "CosmeticsProductUsagePart": {
        "type": "object",
        "description": "Product usage part",
        "additionalProperties": false,
        "properties": {
          "BodyLocations": {
            "type": "array",
            "description": "Where on the body is the product used",
            "maxItems": 10,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "UsageDuration": {
            "type": "string",
            "description": "For how long was the product used",
            "maxLength": 100,
            "nullable": true
          }
        }
      },
      "DietarySupplementsRequest": {
        "type": "object",
        "description": "Diatary supplements DTO",
        "additionalProperties": false,
        "required": [
          "Header",
          "Report"
        ],
        "properties": {
          "Header": {
            "description": "Header part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DietarySupplementsHeaderPart"
              }
            ]
          },
          "Report": {
            "description": "Report part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DietarySupplementsReportPart"
              }
            ]
          }
        }
      },
      "DietarySupplementsHeaderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HeaderPartBase"
          },
          {
            "type": "object",
            "description": "Header part",
            "additionalProperties": false,
            "required": [
              "Reporter",
              "Patient",
              "Incident"
            ],
            "properties": {
              "Reporter": {
                "description": "Reporter part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DietarySupplementsReporterPart"
                  }
                ]
              },
              "Patient": {
                "description": "Patient part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DietarySupplementsPatientPart"
                  }
                ]
              },
              "Incident": {
                "description": "Incident part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/DietarySupplementsIncidentPart"
                  }
                ]
              }
            }
          }
        ]
      },
      "DietarySupplementsReporterPart": {
        "type": "object",
        "description": "Reporter part",
        "additionalProperties": false,
        "required": [
          "Organization",
          "Email",
          "Phone"
        ],
        "properties": {
          "Nin": {
            "type": "string",
            "description": "National id number",
            "pattern": "^\\d{11}$",
            "nullable": true,
            "example": "13065906141"
          },
          "HprId": {
            "type": "integer",
            "description": "HPR id",
            "format": "int32",
            "maximum": 1000000000.0,
            "minimum": 0.0,
            "nullable": true
          },
          "Organization": {
            "description": "Organization",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationPart"
              }
            ]
          },
          "Email": {
            "type": "string",
            "description": "E-mail address",
            "format": "email",
            "minLength": 1,
            "example": "TestData@melde.no"
          },
          "Phone": {
            "type": "string",
            "description": "Phone number",
            "format": "phone",
            "minLength": 1,
            "example": "99999999"
          }
        }
      },
      "DietarySupplementsPatientPart": {
        "type": "object",
        "description": "Patient part",
        "additionalProperties": false,
        "required": [
          "Gender",
          "YearOfBirth"
        ],
        "properties": {
          "Gender": {
            "description": "Gender",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          },
          "YearOfBirth": {
            "type": "integer",
            "description": "Year of birth",
            "format": "int32",
            "maximum": 2100.0,
            "minimum": 1900.0
          }
        }
      },
      "DietarySupplementsIncidentPart": {
        "type": "object",
        "description": "Incident part",
        "additionalProperties": false,
        "required": [
          "IncidentDescription"
        ],
        "properties": {
          "IncidentDescription": {
            "type": "string",
            "description": "Incident description",
            "minLength": 1
          }
        }
      },
      "DietarySupplementsReportPart": {
        "type": "object",
        "description": "Report part",
        "additionalProperties": false,
        "required": [
          "SideEffect"
        ],
        "properties": {
          "SideEffect": {
            "description": "Side effects part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DietarySupplementsSideEffectsPart"
              }
            ]
          },
          "Products": {
            "type": "array",
            "description": "Products part",
            "maxItems": 4,
            "minItems": 1,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/DietarySupplementsProductPart"
            }
          }
        }
      },
      "DietarySupplementsSideEffectsPart": {
        "type": "object",
        "description": "Dietary supplements side effects part",
        "additionalProperties": false,
        "properties": {
          "Reactions": {
            "type": "array",
            "description": "Reactions.\nWhich reactions happened?",
            "maxItems": 10,
            "minItems": 1,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "ReactionDelay": {
            "type": "string",
            "description": "Reaction delay.\nHow long after the use did the reactions show up?",
            "maxLength": 100,
            "nullable": true
          },
          "ReactionDelayDescription": {
            "type": "string",
            "description": "Reaction delay description",
            "maxLength": 150,
            "nullable": true
          },
          "Outcome": {
            "type": "string",
            "description": "Outcome",
            "maxLength": 100,
            "nullable": true
          },
          "OutcomeDescription": {
            "type": "string",
            "description": "Outcome description",
            "maxLength": 150,
            "nullable": true
          },
          "SideEffectDuration": {
            "type": "string",
            "description": "Side effect duration",
            "maxLength": 100,
            "nullable": true
          },
          "Ongoing": {
            "description": "Ongoing. Is the symptom still there?",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNo"
              }
            ]
          },
          "SideEffectsOnPreviousUse": {
            "description": "Side effects on previous use",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          },
          "SideEffectsOnPreviousUseDescription": {
            "type": "string",
            "description": "Side effects on previous use description",
            "maxLength": 500,
            "nullable": true
          },
          "AnyAllergiesOrInfluencingIssues": {
            "description": "Any allergies or influencing issues",
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          },
          "AnyAllergiesOrInfluencingIssuesDescription": {
            "type": "string",
            "description": "Any allergies or influencing issues description.\nRequired when AnyAllergiesOrInfluencingIssues is Yes",
            "maxLength": 500,
            "nullable": true
          },
          "AnyUnderlyingDiseases": {
            "description": "Any underlying diseases",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          },
          "CanDiseaseBeTheCause": {
            "description": "Can underlying diseases be the cause?\nRequired when AnyUnderlyingDiseases is Yes",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          }
        }
      },
      "DietarySupplementsProductPart": {
        "type": "object",
        "description": "Product part",
        "additionalProperties": false,
        "required": [
          "ProductInformation",
          "ProductUsage"
        ],
        "properties": {
          "ProductInformation": {
            "description": "Product information part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DietarySupplementsProductInformationPart"
              }
            ]
          },
          "ProductUsage": {
            "description": "Product usage part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/DietarySupplementsProductUsagePart"
              }
            ]
          }
        }
      },
      "DietarySupplementsProductInformationPart": {
        "type": "object",
        "description": "Product information part",
        "additionalProperties": false,
        "required": [
          "ProductName",
          "Ingredients",
          "VendorOrManufacturer",
          "BestBeforeDate",
          "ReportedToVendorOrManufacturer",
          "PurchaseLocation"
        ],
        "properties": {
          "ProductName": {
            "type": "string",
            "description": "Product name",
            "maxLength": 150,
            "minLength": 1
          },
          "Ingredients": {
            "type": "string",
            "description": "Ingredients",
            "maxLength": 500,
            "minLength": 1
          },
          "VendorOrManufacturer": {
            "type": "string",
            "description": "Vendor or manufacturer",
            "maxLength": 150,
            "minLength": 1
          },
          "BestBeforeDate": {
            "type": "string",
            "description": "Best before date",
            "minLength": 1,
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
          },
          "ReportedToVendorOrManufacturer": {
            "description": "Reported to vendor or producer?",
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          },
          "PurchaseLocation": {
            "type": "string",
            "description": "Purchase location",
            "maxLength": 150,
            "minLength": 1
          },
          "ShopName": {
            "type": "string",
            "description": "Shop name",
            "maxLength": 150,
            "nullable": true
          },
          "BatchLotNumber": {
            "type": "string",
            "description": "Batch/lot number",
            "maxLength": 100,
            "nullable": true
          },
          "Attachments": {
            "type": "array",
            "description": "Attachments",
            "maxItems": 5,
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AttachmentPart"
            }
          }
        }
      },
      "DietarySupplementsProductUsagePart": {
        "type": "object",
        "description": "Product usage part",
        "additionalProperties": false,
        "required": [
          "AmountOfIngredientsInDailyDose",
          "RecommendedDailyDose"
        ],
        "properties": {
          "AmountOfIngredientsInDailyDose": {
            "type": "string",
            "description": "Amount of ingredients per daily dose",
            "maxLength": 500,
            "minLength": 1
          },
          "RecommendedDailyDose": {
            "type": "string",
            "description": "Recommended daily dose",
            "maxLength": 100,
            "minLength": 1
          },
          "ActualDailyDoseTaken": {
            "type": "string",
            "description": "Actual daily dose taken",
            "maxLength": 100,
            "nullable": true
          },
          "UsageDuration": {
            "type": "string",
            "description": "For how long was the product used",
            "maxLength": 100,
            "nullable": true
          },
          "AnyDrugsTakenAtSameTime": {
            "description": "Any drugs taken at the same time?",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNoDontKnow"
              }
            ]
          },
          "DrugsTakenAtSameTime": {
            "type": "array",
            "description": "Which drugs. Required if AnyDrugsTakenAtSameTime is yes.",
            "nullable": true,
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BiovigilanceRequest": {
        "type": "object",
        "description": "Biovigilance request DTO",
        "additionalProperties": false,
        "required": [
          "Header",
          "Report"
        ],
        "properties": {
          "Header": {
            "description": "Report header part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/BiovigilansHeaderPart"
              }
            ]
          },
          "Report": {
            "description": "Report part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/BiovigilanceReportPart"
              }
            ]
          }
        }
      },
      "BiovigilansHeaderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HeaderPartBase"
          },
          {
            "type": "object",
            "description": "Header part",
            "additionalProperties": false,
            "required": [
              "Reporter",
              "Patient",
              "Incident"
            ],
            "properties": {
              "Reporter": {
                "description": "Reporter part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BiovigilanceReporterPart"
                  }
                ]
              },
              "Patient": {
                "description": "Patient part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BiovigilancePatientPart"
                  }
                ]
              },
              "Incident": {
                "description": "Incident part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BiovigilanceIncidentPart"
                  }
                ]
              }
            }
          }
        ]
      },
      "BiovigilanceReporterPart": {
        "type": "object",
        "description": "Reporter part",
        "additionalProperties": false,
        "required": [
          "Organization",
          "Email"
        ],
        "properties": {
          "Nin": {
            "type": "string",
            "description": "National id number",
            "pattern": "^\\d{11}$",
            "nullable": true,
            "example": "13065906141"
          },
          "HprId": {
            "type": "integer",
            "description": "HPR id",
            "format": "int32",
            "maximum": 1000000000.0,
            "minimum": 0.0,
            "nullable": true
          },
          "Organization": {
            "description": "Organization",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationPart"
              }
            ]
          },
          "Email": {
            "type": "string",
            "description": "E-mail address",
            "format": "email",
            "minLength": 1,
            "example": "TestData@melde.no"
          }
        }
      },
      "BiovigilancePatientPart": {
        "type": "object",
        "description": "Patient part.",
        "additionalProperties": false,
        "properties": {
          "YearOfBirth": {
            "type": "integer",
            "description": "Year of birth",
            "format": "int32",
            "maximum": 2100.0,
            "minimum": 1900.0,
            "nullable": true,
            "example": 1991
          },
          "Gender": {
            "description": "Gender",
            "nullable": true,
            "example": "Mann",
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          }
        }
      },
      "BiovigilanceIncidentPart": {
        "type": "object",
        "description": "Informasjon om hendelsen.",
        "additionalProperties": false,
        "required": [
          "IncidentDescription",
          "IncidentDate"
        ],
        "properties": {
          "IncidentDescription": {
            "type": "string",
            "description": "Textual description of what happened.",
            "minLength": 1
          },
          "IncidentDate": {
            "type": "string",
            "description": "Incident date",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$"
          }
        }
      },
      "BiovigilanceReportPart": {
        "type": "object",
        "description": "Biovigilance report part",
        "additionalProperties": false,
        "required": [
          "IncidentLocation",
          "TypeOfIncident",
          "ContributingFactors",
          "Preventability",
          "ActualConsequenceForPatient",
          "Frequency",
          "PossibleConsequenceOnRepetition"
        ],
        "properties": {
          "IncidentLocation": {
            "type": "string",
            "description": "Sted for hendelsen kode (1.x...). Obligatorisk",
            "maxLength": 10,
            "minLength": 1,
            "pattern": "^([0-9.])+$",
            "example": "1.6.4"
          },
          "TypeOfIncident": {
            "type": "string",
            "description": "Hendelsestype kode (2.x...). Obligatorisk",
            "maxLength": 20,
            "minLength": 1,
            "pattern": "^([0-9.])+$",
            "example": "2.10.1.1.1"
          },
          "ContributingFactors": {
            "type": "array",
            "description": "Medvirkende faktorer (kode 3.x...). Obligatorisk\nReturnerer en liste med valgte koder.",
            "pattern": "^([0-9.])+$",
            "maxItems": 10,
            "example": [
              "3.2.2",
              "3.4.3"
            ],
            "items": {
              "type": "string"
            }
          },
          "Preventability": {
            "type": "string",
            "description": "Forebyggbarhet kode (4.x...). Obligatorisk",
            "maxLength": 10,
            "minLength": 1,
            "pattern": "^([0-9.])+$",
            "example": 4.3
          },
          "ActualConsequenceForPatient": {
            "type": "string",
            "description": "Faktisk konsekvens for pasient kode (5.x...). Obligatorisk",
            "maxLength": 10,
            "minLength": 1,
            "pattern": "^([0-9.])+$",
            "example": 5.2
          },
          "Frequency": {
            "type": "string",
            "description": "Hyppighet kode (6.x...). Obligatorisk",
            "maxLength": 10,
            "minLength": 1,
            "pattern": "^([0-9.])+$",
            "example": 6.3
          },
          "PossibleConsequenceOnRepetition": {
            "type": "string",
            "description": "Mulig konsekvens ved gjentakelse kode (7.x...). Obligatorisk",
            "maxLength": 10,
            "minLength": 1,
            "pattern": "^([0-9.])+$",
            "example": 7.4
          },
          "AntiSubstance": {
            "type": "string",
            "description": "Tilleggsinfo: Antistoff tekst",
            "maxLength": 300,
            "nullable": true,
            "example": "Anti-D"
          },
          "AutologousCode": {
            "type": "string",
            "description": "Tilleggsinfo: AutologKode",
            "pattern": "^[1-4]$",
            "nullable": true,
            "example": 3
          },
          "DepartmentCode": {
            "type": "string",
            "description": "Tilleggsinfo: AvdelingsKode",
            "pattern": "^([1-8]|99)$",
            "nullable": true,
            "example": 5
          },
          "DeregistrationCode": {
            "type": "string",
            "description": "Tilleggsinfo: AvregistreringKode",
            "pattern": "^[0-2]$",
            "nullable": true,
            "example": 1
          },
          "BloodProductCode": {
            "type": "string",
            "description": "Tilleggsinfo: BlodproduktKode",
            "pattern": "^([0-9]|1[0-1])$",
            "nullable": true,
            "example": 2
          },
          "CellsAndTissuesDefinitionCode": {
            "type": "string",
            "description": "Tilleggsinfo: CellerOgVevDefinisjonKode",
            "pattern": "^([1-4]|99)$",
            "nullable": true,
            "example": 4
          },
          "CellsAndTissuesCode": {
            "type": "array",
            "description": "Tilleggsinfo: CellerOgVevKode",
            "pattern": "^([1-9]|1[0-5]|99)$",
            "nullable": true,
            "example": [
              "7",
              "8"
            ],
            "items": {
              "type": "string"
            }
          },
          "DefinitionCode": {
            "type": "string",
            "description": "Tilleggsinfo: DefinisjonKode",
            "pattern": "^([1-4]|99)$",
            "nullable": true,
            "example": 1
          },
          "DonorCountryCode": {
            "type": "string",
            "description": "Tilleggsinfo: DonorlandKode",
            "pattern": "^([1-4]|99)$",
            "nullable": true,
            "example": 1
          },
          "DonorExperienceCode": {
            "type": "string",
            "description": "Tilleggsinfo: GivererfaringKode",
            "pattern": "^[1-2]$",
            "nullable": true,
            "example": 2
          },
          "WhatWentWrongCode": {
            "type": "array",
            "description": "Tilleggsinfo: HvaGikkGaltKode",
            "pattern": "^([0-9]|1[0-8])$",
            "maxItems": 19,
            "nullable": true,
            "example": [
              "11",
              "12"
            ],
            "items": {
              "type": "string"
            }
          },
          "DiscoveredCode": {
            "type": "string",
            "description": "Tilleggsinfo: OppdagetKode",
            "pattern": "^([1-5]|99)$",
            "nullable": true,
            "example": 3
          },
          "OrganDefinitionCode": {
            "type": "string",
            "description": "Tilleggsinfo: OrganDefinisjonKode",
            "pattern": "^([1-4]|99)$",
            "nullable": true,
            "example": 1
          },
          "OrganCode": {
            "type": "array",
            "description": "Tilleggsinfo: OrganKode",
            "pattern": "^([1-9]|1[0-1]|99)$",
            "maxItems": 10,
            "nullable": true,
            "example": [
              "7",
              "8"
            ],
            "items": {
              "type": "string"
            }
          },
          "ReactionStartedLocationCode": {
            "type": "string",
            "description": "Tilleggsinfo: ReaksjonStartetHvorKode",
            "pattern": "^[1-3]$",
            "nullable": true,
            "example": 3
          },
          "ReactionDurationCode": {
            "type": "string",
            "description": "Tilleggsinfo: ReaksjonsvarighetKode",
            "pattern": "^([1-9]|1[0-2])$",
            "nullable": true,
            "example": 4
          },
          "SickLeaveCode": {
            "type": "string",
            "description": "Tilleggsinfo: SykemeldingKode",
            "pattern": "^[0-5]$",
            "nullable": true,
            "example": 2
          },
          "SymptomsCode": {
            "type": "array",
            "description": "Tilleggsinfo: SymptomKode",
            "pattern": "^([0-9]|1[0-9]|2[0-5])$",
            "maxItems": 15,
            "nullable": true,
            "example": [
              "4",
              "5"
            ],
            "items": {
              "type": "string"
            }
          },
          "TapTypeCode": {
            "type": "string",
            "description": "Tilleggsinfo: TappetypeKode",
            "pattern": "^([0-3]|99)$",
            "nullable": true,
            "example": 2
          },
          "TimeBeforeReactionCode": {
            "type": "string",
            "description": "Tilleggsinfo: TidTilReaksjonKode",
            "pattern": "^[1-6]$",
            "nullable": true,
            "example": 3
          },
          "AdditionalBloodProductCode": {
            "type": "array",
            "description": "Tilleggsinfo: TilleggsinfoBlodproduktKode",
            "pattern": "^[0-2]$",
            "maxItems": 3,
            "nullable": true,
            "example": [
              "0",
              "1"
            ],
            "items": {
              "type": "string"
            }
          },
          "MeasuresCode": {
            "type": "array",
            "description": "Tilleggsinfo: TiltakKode",
            "pattern": "^[1-6]$",
            "maxItems": 6,
            "nullable": true,
            "example": [
              "4",
              "5"
            ],
            "items": {
              "type": "string"
            }
          },
          "TransfusionCode": {
            "type": "string",
            "description": "Tilleggsinfo: TransfusjonsindikasjonKode",
            "pattern": "^[0-5]$",
            "nullable": true,
            "example": 2
          },
          "CausationCode": {
            "type": "string",
            "description": "Tilleggsinfo: AarsakssammenhengKode",
            "pattern": "^[1-5]$",
            "nullable": true,
            "example": 3
          },
          "ISBT128ProductCode": {
            "type": "string",
            "description": "ISBT128Produktkode tekst",
            "maxLength": 150,
            "nullable": true
          },
          "ScandiaTransplantNumber": {
            "type": "string",
            "description": "ScandiatransplantNummer tekst",
            "maxLength": 300,
            "nullable": true
          },
          "InfectiousSubstance": {
            "type": "string",
            "description": "Smittestoff tekst",
            "maxLength": 300,
            "nullable": true
          }
        }
      },
      "MedicalEquipmentRequest": {
        "type": "object",
        "description": "Medical equipment DTO",
        "additionalProperties": false,
        "required": [
          "Header",
          "Report"
        ],
        "properties": {
          "Header": {
            "description": "Header part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MedicalEquipmentHeaderPart"
              }
            ]
          },
          "Report": {
            "description": "Report part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/MedicalEquipmentReportPart"
              }
            ]
          }
        }
      },
      "MedicalEquipmentHeaderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HeaderPartBase"
          },
          {
            "type": "object",
            "description": "Header part",
            "additionalProperties": false,
            "required": [
              "Reporter",
              "Incident"
            ],
            "properties": {
              "Reporter": {
                "description": "Reporter part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MedicalEquipmentReporterPart"
                  }
                ]
              },
              "Incident": {
                "description": "Incident part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MedicalEquipmentIncidentPart"
                  }
                ]
              }
            }
          }
        ]
      },
      "MedicalEquipmentReporterPart": {
        "type": "object",
        "description": "Reporter part",
        "additionalProperties": false,
        "required": [
          "Organization",
          "Email",
          "Phone"
        ],
        "properties": {
          "Nin": {
            "type": "string",
            "description": "National id number",
            "pattern": "^\\d{11}$",
            "nullable": true,
            "example": "13065906141"
          },
          "HprId": {
            "type": "integer",
            "description": "HPR id",
            "format": "int32",
            "maximum": 1000000000.0,
            "minimum": 0.0,
            "nullable": true
          },
          "Organization": {
            "description": "Organization",
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationPart"
              }
            ]
          },
          "Email": {
            "type": "string",
            "description": "E-mail address",
            "format": "email",
            "minLength": 1,
            "example": "TestData@melde.no"
          },
          "Phone": {
            "type": "string",
            "description": "Phone number",
            "format": "phone",
            "minLength": 1,
            "example": "99999999"
          }
        }
      },
      "MedicalEquipmentIncidentPart": {
        "type": "object",
        "description": "Incident part",
        "additionalProperties": false,
        "required": [
          "IncidentDescription",
          "IncidentDate"
        ],
        "properties": {
          "IncidentDescription": {
            "type": "string",
            "description": "Incident description",
            "minLength": 1
          },
          "IncidentDate": {
            "type": "string",
            "description": "Incident date",
            "pattern": "^\\d{4}-\\d{2}-\\d{2}$",
            "example": "2021-04-14"
          }
        }
      },
      "MedicalEquipmentReportPart": {
        "type": "object",
        "description": "Medical equipment report part",
        "additionalProperties": false,
        "required": [
          "EquipmentName",
          "Manufacturer",
          "ModelName",
          "NkknCategory",
          "EquipmentLocation",
          "IncidentClassification"
        ],
        "properties": {
          "NkknTypeCode": {
            "type": "integer",
            "description": "NKKN type code",
            "format": "int32",
            "nullable": true
          },
          "EquipmentName": {
            "type": "string",
            "description": "Equipment name",
            "maxLength": 300,
            "minLength": 1
          },
          "Manufacturer": {
            "type": "string",
            "description": "Manufacturer",
            "maxLength": 300,
            "minLength": 1
          },
          "ModelName": {
            "type": "string",
            "description": "Model name",
            "maxLength": 300,
            "minLength": 1
          },
          "NkknGroup": {
            "description": "NKKN equipment group",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/IdNavn"
              }
            ]
          },
          "NkknCategory": {
            "description": "NKKN equipment category",
            "oneOf": [
              {
                "$ref": "#/components/schemas/NkknCategory"
              }
            ]
          },
          "SerialNumber": {
            "type": "string",
            "description": "Serial number",
            "maxLength": 100,
            "nullable": true
          },
          "BatchLotNumber": {
            "type": "string",
            "description": "Batch/lot number",
            "maxLength": 100,
            "nullable": true
          },
          "ProductionDate": {
            "type": "string",
            "description": "Production date.\nYear only or year and month are also accepted",
            "nullable": true
          },
          "ExpirationDate": {
            "type": "string",
            "description": "Equipment expiration date.\nYear only or year and month are also accepted",
            "nullable": true,
            "example": "2021-10-23"
          },
          "EquipmentLocation": {
            "description": "Equipment location",
            "oneOf": [
              {
                "$ref": "#/components/schemas/EquipmentLocation"
              }
            ]
          },
          "Distributor": {
            "type": "string",
            "description": "Distributor",
            "maxLength": 150,
            "nullable": true
          },
          "IncidentClassification": {
            "description": "Incident classification",
            "oneOf": [
              {
                "$ref": "#/components/schemas/IncidentClassification"
              }
            ]
          },
          "ImplantInformation": {
            "description": "Implant information (if applicable)",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MedicalEquipmentImplantInformation"
              }
            ]
          }
        }
      },
      "IdNavn": {
        "type": "object",
        "description": "Generic long id + string name",
        "additionalProperties": false,
        "properties": {
          "Id": {
            "type": "integer",
            "description": "Generert ID i En Vei Inn sin database",
            "format": "int64"
          },
          "Name": {
            "type": "string",
            "description": "Name of the item",
            "nullable": true
          }
        }
      },
      "NkknCategory": {
        "type": "string",
        "description": "Medical equipment category",
        "x-enumNames": [
          "ActiveImplantableEquipment",
          "AnesthesiologicalAndRespiratoryEquipment",
          "DentalEquipment",
          "ElectroMechanicEquipment",
          "HospitalEquipmentEquipment",
          "InVitroDiagnosticEquipment",
          "PassiveImplantableEquipment",
          "OphthalmologicalAndOpticalEquipment",
          "ReusableEquipment",
          "DisposeableEquipment",
          "TechnicalAid",
          "DiagnosticAndTherapeuticRadiationEquipment"
        ],
        "enum": [
          "AktivtImplanterbartUtstyr",
          "AnestesiologiskOgRespiratoriskUtstyr",
          "DentaltUtstyr",
          "ElektromekaniskUtstyr",
          "Sykehusutrustning",
          "InVitroDiagnostiskUtstyr",
          "PassivtImplanterbartUtstyr",
          "OftalmologiskOgOptiskUtstyr",
          "Flergangsutstyr",
          "Engangsutstyr",
          "TekniskeHjelpemidler",
          "DiagnostiskOgTerapeutiskStralegivendeUtstyr"
        ]
      },
      "EquipmentLocation": {
        "type": "string",
        "description": "Where is the equipment located at the time of reporting",
        "x-enumNames": [
          "Healthcare",
          "PatientOrClient",
          "SentToManufacturer",
          "Manufacturer",
          "DistributorVendor",
          "Discarded",
          "StillImplanted",
          "Unknown"
        ],
        "enum": [
          "Helseforetak",
          "PasientBruker",
          "PaVeiTilProdusent",
          "Produsent",
          "DistributorForhandlerOmsetter",
          "Kastet",
          "FortsattImplantert",
          "Ukjent"
        ]
      },
      "IncidentClassification": {
        "type": "string",
        "description": "Incident classification",
        "x-enumNames": [
          "Death",
          "SeriousDeterioration",
          "MayHaveCausedDeathOrSeriousDeterioration"
        ],
        "enum": [
          "Dodsfall",
          "AlvorligForverringAvHelsetilstand",
          "KunneHaFortTilDodEllerForverring"
        ]
      },
      "MedicalEquipmentImplantInformation": {
        "type": "object",
        "description": "MedisinskUtstyrImplantatInformasjon",
        "additionalProperties": false,
        "properties": {
          "ImplantDate": {
            "type": "string",
            "description": "Implant date.\nYear only or year and month are also accepted (2021-10-23 or 2021-10 or 2021)",
            "nullable": true,
            "example": "2021-10-23"
          },
          "ExplantDate": {
            "type": "string",
            "description": "Explant date\nYear only or year and month are also accepted (2021-10-23 or 2021-10 or 2021)",
            "nullable": true,
            "example": "2021-10-23"
          }
        }
      },
      "AdverseIncidentRequest": {
        "type": "object",
        "description": "Adverse incident DTO",
        "additionalProperties": false,
        "required": [
          "Header",
          "Report"
        ],
        "properties": {
          "Header": {
            "description": "Header part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdverseIncidentHeaderPart"
              }
            ]
          },
          "Report": {
            "description": "Report part",
            "oneOf": [
              {
                "$ref": "#/components/schemas/AdverseIncidentReportPart"
              }
            ]
          }
        }
      },
      "AdverseIncidentHeaderPart": {
        "allOf": [
          {
            "$ref": "#/components/schemas/HeaderPartBase"
          },
          {
            "type": "object",
            "description": "Header part",
            "additionalProperties": false,
            "required": [
              "Reporter",
              "Incident",
              "ReportAreas"
            ],
            "properties": {
              "Reporter": {
                "description": "Reporter part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdverseIncidentReporterPart"
                  }
                ]
              },
              "Patient": {
                "description": "Patient part. Required for all report areas except Medical equipment",
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdverseIncidentPatientPart"
                  }
                ]
              },
              "Incident": {
                "description": "Incident part",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdverseIncidentIncidentPart"
                  }
                ]
              },
              "ReportAreas": {
                "description": "Report areas",
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdverseIncidentReportAreasPart"
                  }
                ]
              }
            }
          }
        ]
      },
      "AdverseIncidentReporterPart": {
        "type": "object",
        "description": "Adverse incident part",
        "additionalProperties": false,
        "properties": {
          "Nin": {
            "type": "string",
            "description": "Social security number",
            "pattern": "^\\d{11}$",
            "nullable": true
          },
          "HprId": {
            "type": "integer",
            "description": "HPR id",
            "format": "int32",
            "maximum": 1000000000.0,
            "minimum": 0.0,
            "nullable": true
          },
          "Organization": {
            "description": "Organization",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationPart"
              }
            ]
          },
          "IncidentOrganization": {
            "description": "Use if the incident occurred in an other organization",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/OrganizationPart"
              }
            ]
          },
          "Email": {
            "type": "string",
            "description": "E-mail address",
            "format": "email",
            "maxLength": 150,
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name",
            "maxLength": 150,
            "nullable": true
          },
          "Phone": {
            "type": "string",
            "description": "Phone number.\nRequired for report areas Serious incident, Cosmetics, Diatary supplements, Drug side effects and medical equipments",
            "format": "phone",
            "maxLength": 50,
            "nullable": true,
            "example": 12345678
          },
          "Qualification": {
            "description": "Reporter's qualification",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Qualification"
              }
            ]
          },
          "Role": {
            "description": "Role. Required for report area Serious incident",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/ReporterRole"
              }
            ]
          },
          "Position": {
            "type": "string",
            "description": "Position. Required for report area Serious incident",
            "maxLength": 64,
            "nullable": true
          },
          "IsOnBehalfOf": {
            "description": "True if reporter is reporting on behalf of someone else",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNo"
              }
            ]
          }
        }
      },
      "AdverseIncidentPatientPart": {
        "type": "object",
        "description": "UonsketHendelsePasientPart",
        "additionalProperties": false,
        "properties": {
          "Nin": {
            "type": "string",
            "description": "National is number.\nRequired for report area Drug side effects if date of birth and gender is not set.\nRequired for report area Serious incident if name, gender, date of birth and nationality is not set",
            "pattern": "^\\d{11}$",
            "nullable": true
          },
          "Initials": {
            "type": "string",
            "description": "Patient's initials",
            "maxLength": 10,
            "nullable": true
          },
          "DateOfBirth": {
            "type": "string",
            "description": "Date of birth.\nRequired for report areas Drug side effects and Serious incident if Nin is not set",
            "nullable": true
          },
          "Gender": {
            "description": "Gender.\nRequired for report areas Drug side effects, Serious incident, Cosmetics and Diatary supplements if Nin is not set",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Gender"
              }
            ]
          },
          "YearOfBirth": {
            "type": "integer",
            "description": "Year of birth.\nRequired for report areas Cosmetics and Dietary supplements",
            "format": "int32",
            "maximum": 2100.0,
            "minimum": 1900.0,
            "nullable": true
          },
          "Name": {
            "type": "string",
            "description": "Name.\nRequired for report area Serious incident if Nin is not set",
            "maxLength": 150,
            "nullable": true
          },
          "Nationality": {
            "type": "string",
            "description": "Nationality.\nRequired for report area Serious incident if Nin is not set",
            "maxLength": 150,
            "nullable": true
          },
          "Height": {
            "type": "integer",
            "description": "Height, in cm",
            "format": "int32",
            "maximum": 300.0,
            "minimum": 20.0,
            "nullable": true
          },
          "Weight": {
            "type": "integer",
            "description": "Weight, in kg",
            "format": "int32",
            "maximum": 300.0,
            "minimum": 1.0,
            "nullable": true
          }
        }
      },
      "AdverseIncidentIncidentPart": {
        "type": "object",
        "description": "Adverse incident part",
        "additionalProperties": false,
        "required": [
          "IncidentDescription"
        ],
        "properties": {
          "IncidentDescription": {
            "type": "string",
            "description": "Indicent description",
            "maxLength": 30000,
            "minLength": 1
          },
          "IncidentDate": {
            "type": "string",
            "description": "Incident date. Required for report area Medical equipment",
            "nullable": true,
            "example": "2020-03-12"
          },
          "DateUnknown": {
            "description": "Date unknown flag. Required for report area Serious incident",
            "oneOf": [
              {
                "$ref": "#/components/schemas/YesNo"
              }
            ]
          },
          "DateText": {
            "type": "string",
            "description": "Date period if no other date is given and DateUnknown is false",
            "maxLength": 250,
            "nullable": true
          }
        }
      },
      "AdverseIncidentReportAreasPart": {
        "type": "object",
        "description": "Report areas",
        "additionalProperties": false,
        "properties": {
          "SeriousIncident": {
            "type": "boolean",
            "description": "True if a Serious incident report is included in this request"
          },
          "DrugSideEffects": {
            "type": "boolean",
            "description": "True if a Drug side effects report is included in this request"
          },
          "Biovigilance": {
            "type": "boolean",
            "description": "True if a Biovigilance report is included in this request"
          },
          "Cosmetics": {
            "type": "boolean",
            "description": "True if a Cosmetics report is included in this request"
          },
          "DietarySupplements": {
            "type": "boolean",
            "description": "True if a Dietary supplements report is included in this request"
          },
          "MedicalEquipment": {
            "type": "boolean",
            "description": "True if a Medical equipment report is included in this request"
          }
        }
      },
      "AdverseIncidentReportPart": {
        "type": "object",
        "description": "Report part",
        "additionalProperties": false,
        "properties": {
          "SeriousIncident": {
            "description": "Serious incident report",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SeriousIncidentReportPart"
              }
            ]
          },
          "DrugSideEffects": {
            "description": "Drug side effects report",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DrugSideEffectsReportPart"
              }
            ]
          },
          "Biovigilance": {
            "description": "Biovigilance report",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BiovigilanceReportPart"
              }
            ]
          },
          "Cosmetics": {
            "description": "Cosmetice report",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/CosmeticsReportPart"
              }
            ]
          },
          "DietarySupplements": {
            "description": "Dietary supplements report",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/DietarySupplementsReportPart"
              }
            ]
          },
          "MedicalEquipment": {
            "description": "Medical equipment report",
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/MedicalEquipmentReportPart"
              }
            ]
          }
        }
      },
      "AdverseIncidentListResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseRespons"
          },
          {
            "type": "object",
            "description": "Informasjon om en uønsket hendelse",
            "additionalProperties": false,
            "properties": {
              "AdverseIncidents": {
                "type": "array",
                "description": "List of adverse incidents",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/AdverseIncident"
                }
              }
            }
          }
        ]
      },
      "AdverseIncident": {
        "type": "object",
        "description": "Informasjon om en uønsket hendelse",
        "additionalProperties": false,
        "properties": {
          "ReportRef": {
            "type": "string",
            "description": "Report reference number (Uxxx... or Vxxx...)",
            "nullable": true
          },
          "ReportTime": {
            "type": "string",
            "description": "Report receive time",
            "format": "date-time"
          },
          "ReportAreas": {
            "type": "array",
            "description": "Information about report areas the reporthas been sent to, and information about existing dialogs.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AdverseIncidentReportArea"
            }
          }
        }
      },
      "AdverseIncidentReportArea": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Name": {
            "type": "string",
            "description": "Report area name",
            "nullable": true
          },
          "Dialogs": {
            "type": "array",
            "description": "Dialogs for this report area.",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/AdverseIncidentReportAreaDialog"
            }
          }
        }
      },
      "AdverseIncidentReportAreaDialog": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "DialogRef": {
            "type": "string",
            "description": "Dialog reference number 'Dxxx...'",
            "nullable": true
          },
          "UnreadMessagesCount": {
            "type": "integer",
            "description": "Number of unread messages in dialog",
            "format": "int32"
          }
        }
      },
      "NokupLookupResult": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "InputType": {
            "$ref": "#/components/schemas/OptionType"
          },
          "Mandatory": {
            "type": "boolean"
          },
          "MaxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "IsAdditionalInfo": {
            "type": "boolean"
          },
          "IsLeafNokupNode": {
            "type": "boolean"
          },
          "Options": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/NokupLookupOption"
            }
          }
        }
      },
      "OptionType": {
        "type": "string",
        "description": "",
        "x-enumNames": [
          "SingleChoice",
          "MultipleChoice",
          "All",
          "Text"
        ],
        "enum": [
          "SingleChoice",
          "MultipleChoice",
          "All",
          "Text"
        ]
      },
      "NokupLookupOption": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "Code": {
            "type": "string",
            "nullable": true
          },
          "Name": {
            "type": "string",
            "nullable": true
          },
          "Description": {
            "type": "string",
            "nullable": true
          },
          "HasChildren": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "bearer": {
        "type": "http",
        "description": "Put **_ONLY_** your JWT Bearer token on textbox below!",
        "name": "JWT Authentication",
        "in": "header",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}